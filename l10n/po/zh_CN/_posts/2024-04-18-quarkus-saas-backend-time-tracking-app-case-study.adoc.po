msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid "Revolutionizing time tracking: how Quarkus transformed our backend development"
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid ""
"GRAN Software Solutions is a German company that designs and builds modern backend solutions.\n"
"We work with large automotive clients and others to restructure and create new solutions.\n"
"We also develop and offer SaaS tools to help us and others in our daily work."
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid "One such tool we built for ourselves and others is a time tracking application called https://sheetty.com[Sheetty]."
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid "The time tracking challenge"
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid ""
"We needed to create a time tracking application because the existing solutions on the market did not meet our specific requirements.\n"
"They were either not designed for developers, lacked the simplicity we needed, or were loaded with unnecessary features.\n"
"We wanted to build a tool that was perfectly tailored to our needs, using the extensive experience we had gained from working on client projects over the years.\n"
"We also wanted to create a more modern and user-friendly design, which would be fun to use and incorporate newer technologies such as Quarkus."
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid ""
"The main issue we faced with existing time tracking solutions was the lack of an easy way to switch between clients.\n"
"We also found that they did not support quick actions or shortcuts, which we were used to, and there was no visual way to see the time entries we made during the day.\n"
"Additionally, we wanted to track time within the context of contracts signed with our clients in terms of daily rates and contract caps.\n"
"That's why we decided to create a custom solution to address all of these specific needs."
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid "Discovering Quarkus"
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid ""
"When we were choosing the technology stack to use for our backend, our main goal was to use technologies that we were already familiar with, such as the Kotlin programming language, Spring Boot framework, and Postgres database.\n"
"We also wanted to select an ecosystem that could provide us with libraries for database connectivity, web client, caching, and other similar features.\n"
"Additionally, we wanted to use a high-performance solution to keep our hosting costs low and avoid high memory requirements."
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid "After analyzing various solutions on the market, we decided to use the Quarkus framework as it met all of our requirements."
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid "Our backend development experience with Quarkus: the key features"
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid ""
"We have designed our application architecture to separate the frontend and backend parts.\n"
"To secure our backend APIs in a modern and secure way, we opted to use JSON web tokens, and Quarkus has excellent support for them.\n"
"We also use role-based security for our APIs, and Quarkus makes it easy for us to implement this.\n"
"We have different roles in our application, such as regular users and admins, and this information is encoded in our JSON web tokens.\n"
"Quarkus ensures that these tokens are not tampered with or manipulated when they reach our back-end systems."
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid "`@RolesAllowed` for authorization of our API endpoints"
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid ""
"We relied heavily on rich JSON support to model our data flexibly and delegate much of the functionality to Postgres itself to manipulate the data.\n"
"This way, we could pass the already-built JSON objects back to the API client, which significantly reduced the time it took to make design decisions in the application code.\n"
"Quarkus provided fantastic support for JSON object APIs.\n"
"We believe that Postgres is the right place to perform data manipulations and aggregations, not the application code, due to performance and code maintenance reasons."
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid "Using `JsonObject` to pass our data in and out"
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid ""
"Although Quarkus primarily targets Java programming language, Kotlin support is also quite good.\n"
"We used coroutines and suspending functions, which allowed for greater performance and much simpler code compared to some other asynchronous programming models that are available.\n"
"Kotlin's structured concurrency enabled us to write seemingly sequential code but in reality, very performant asynchronous code.\n"
"Quarkus provides excellent Kotlin extension methods built on top of existing asynchronous APIs such as Mutiny."
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid ""
"We executed the database migration on application startup, which was very important for us.\n"
"Fortunately, Quarkus has excellent Flyway support, so all our database migrations were in one place and executed during our backend booting process.\n"
"This kept our database schema and data transparent and reproducible."
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid "Using Flyway to execute database migrations"
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid ""
"For our deployments, we use Kubernetes.\n"
"Before using Quarkus, we described our application requirements using helm packaging, but with Quarkus, we opted for another approach as Quarkus offers a great Kubernetes extension.\n"
"Instead of writing any code, we described our Kubernetes resources using an `application.yaml` file, keeping our complete application configuration in one place.\n"
"This extension generated Kubernetes resource files behind the scenes, which we then applied to our Kubernetes cluster.\n"
"This works well for us."
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid "Using the Kubernetes extension to generate Kubernetes resources"
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid ""
"For packaging our backend API, we used the Jib extension.\n"
"To package our application in a container, all we had to do was use the `application.yaml` file and set all the required parameters such as image name tags repository, and so on.\n"
"We didn't have to maintain the Docker file on our own, which was very convenient."
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid ""
"Our time tracking application needs to send emails to our users and admins on various occasions.\n"
"To keep things simpler, we decided not to go for any third-party API-driven email-sending approach.\n"
"Instead, we send emails ourselves, and for that purpose, we use Qute email templates, which make composing and sending emails to our users very simple.\n"
"This extension provides support for coding coroutines, allowing for non-blocking sending and higher throughput."
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid "Using Qute email templates to send emails"
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid "Development journey"
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid ""
"The Quarkus development process has been excellent so far.\n"
"Compared to other frameworks like Spring Boot, Quarkus has a faster startup time and a smaller memory footprint.\n"
"It also provides profiles, which allows us to have slightly different configurations or behaviors between environments.\n"
"We can easily substitute some hard-to-run third-party services with local mocks, leaving the application code unchanged.\n"
"Quarkus is also great in terms of configuration and how easily we can overwrite values stored in the `application.yaml` file with external environment variables.\n"
"Although the hot reload mode didn't work well with Kotlin, I believe all the bugs related to it will be solved in upcoming releases.\n"
"During development, we had to restart our running service most of the time for code changes to take effect."
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid ""
"Our backend API functionalities took approximately a month and a half to complete.\n"
"Considering that only two developers worked on the backend, I think it was a good result.\n"
"In this phase of our product lifecycle, we decided against writing automated tests due to constantly revisiting requirements and our needs.\n"
"Instead, we went for manual testing for now.\n"
"Once our time tracking application gets more active users, we plan to start writing automated tests using Quarkus test support, including Testcontainers and others.\n"
"Developing a full-blown API, including API security with JSON web tokens and authorization in place, having database migration automatically applied during application boot time, having a flexible and maintainable code base revolving around JSON, with the ability to package and deploy our API to our Kubernetes cluster, is quite an achievement for just a month and a half of work."
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid "Conclusion"
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid ""
"We are glad to share that using Quarkus, Kotlin, and Postgres as the foundation of our backend API has been a fun and productive experience for us.\n"
"Quarkus's ability to experiment quickly and leverage ready-made components has made us confident that we made the right technological choice.\n"
"Although there are some imperfections with hot reload and some quirks with Kotlin, we are waiting for the fixes to be made and have no doubt that Quarkus is the best solution for us."
msgstr ""

#: _posts/2024-04-18-quarkus-saas-backend-time-tracking-app-case-study.adoc
msgid ""
"We are working smart and hard to bring new features to our time tracking application.\n"
"To achieve this, we will continue to use the great features provided by Quarkus, which dramatically reduce the time needed to roll out our features quickly.\n"
"We invite you to try our time tracker at https://sheetty.com[sheetty.com]."
msgstr ""
