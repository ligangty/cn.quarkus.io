# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-12-17 02:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:6
#, no-wrap
msgid "Authorization of web endpoints"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:15
msgid "Quarkus incorporates a pluggable web security layer.  When security is active, the system performs a permission check on all HTTP requests to determine if they should proceed."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:18
msgid "Using `@PermitAll` will not open a path if the path is restricted by the `quarkus.http.auth.` configuration.  To ensure specific paths are accessible, appropriate configurations must be made within the Quarkus security settings."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:22
msgid "If you use Jakarta RESTful Web Services, consider using `quarkus.security.jaxrs.deny-unannotated-endpoints` or `quarkus.security.jaxrs.default-roles-allowed` to set default security requirements instead of HTTP path-level matching because annotations can override these properties on an individual endpoint."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:27
msgid "Authorization is based on user roles that the security provider provides.  To customize these roles, a `SecurityIdentityAugmentor` can be created, see xref:security-customization.adoc#security-identity-customization[Security Identity Customization]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:29
#, no-wrap
msgid "Authorization using configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:32
msgid "Permissions are defined in the Quarkus configuration by permission sets, each specifying a policy for access control."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:33
#, no-wrap
msgid "{project-name} policies summary"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:36
#, no-wrap
msgid "Built-in policy"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:37
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:383
#, no-wrap
msgid "Description"
msgstr "描述"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:37
#, no-wrap
msgid "`deny`"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:38
#, no-wrap
msgid "This policy denies all users."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:38
#, no-wrap
msgid "`permit`"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:39
#, no-wrap
msgid "This policy permits all users."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:39
#, no-wrap
msgid "`authenticated`"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:40
#, no-wrap
msgid "This policy permits only authenticated users."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:43
msgid "You can define role-based policies that allow users with specific roles to access the resources."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:44
#, no-wrap
msgid "Example of a role-based policy"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:48
#, no-wrap
msgid "quarkus.http.auth.policy.role-policy1.roles-allowed=user,admin                  <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:50
msgid "This defines a role-based policy that allows users with the `user` and `admin` roles."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:52
msgid "You can reference a custom policy by configuring the built-in permission sets that are defined in the `application.properties` file, as outlined in the following configuration example:"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:53
#, no-wrap
msgid "Example of policy configuration"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:59
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.paths=/public/*                            <1>\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:62
#, no-wrap
msgid ""
"quarkus.http.auth.permission.deny1.paths=/forbidden                             <2>\n"
"quarkus.http.auth.permission.deny1.policy=deny\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:65
#, no-wrap
msgid ""
"quarkus.http.auth.permission.roles1.paths=/roles-secured/*,/other/*,/api/*      <3>\n"
"quarkus.http.auth.permission.roles1.policy=role-policy1\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:68
msgid "This permission references the default built-in `permit` policy to allow `GET` methods to `/public`.  In this case, the demonstrated setting would not affect this example because this request is allowed anyway."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:70
msgid "This permission references the built-in `deny` policy for `/forbidden`.  It is an exact path match because it does not end with `*`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:72
msgid "This permission set references the previously defined policy.  `roles1` is an example name; you can call the permission sets whatever you want."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:77
msgid "The exact path `/forbidden` in the example will not secure the `/forbidden/` path.  It is necessary to add a new exact path for the `/forbidden/` path to ensure proper security coverage."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:79
#, no-wrap
msgid "Custom HttpSecurityPolicy"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:83
msgid "Sometimes it might be useful to register your own named policy. You can get it done by creating application scoped CDI bean that implements the `io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy` interface like in the example below:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:87
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:833
#, no-wrap
msgid "import jakarta.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:92
#, no-wrap
msgid ""
"import io.quarkus.security.identity.SecurityIdentity;\n"
"import io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy;\n"
"import io.smallrye.mutiny.Uni;\n"
"import io.vertx.ext.web.RoutingContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:103
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class CustomNamedHttpSecPolicy implements HttpSecurityPolicy {\n"
"    @Override\n"
"    public Uni<CheckResult> checkPermission(RoutingContext event, Uni<SecurityIdentity> identity,\n"
"            AuthorizationRequestContext requestContext) {\n"
"        if (customRequestAuthorization(event)) {\n"
"            return Uni.createFrom().item(CheckResult.PERMIT);\n"
"        }\n"
"        return Uni.createFrom().item(CheckResult.DENY);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:108
#, no-wrap
msgid ""
"    @Override\n"
"    public String name() {\n"
"        return \"custom\"; <1>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:114
#, no-wrap
msgid ""
"    private static boolean customRequestAuthorization(RoutingContext event) {\n"
"        // here comes your own security check\n"
"        return !event.request().path().endsWith(\"denied\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:116
msgid "Named HTTP Security policy will only be applied to requests matched by the `application.properties` path matching rules."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:117
#, no-wrap
msgid "Example of custom named HttpSecurityPolicy referenced from configuration file"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:122
#, no-wrap
msgid ""
"quarkus.http.auth.permission.custom1.paths=/custom/*\n"
"quarkus.http.auth.permission.custom1.policy=custom                              <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:124
msgid "Custom policy name must match the value returned by the `io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy.name` method."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:129
msgid "You can also create global `HttpSecurityPolicy` invoked on every request.  Just do not implement the `io.quarkus.vertx.http.runtime.security.HttpSecurityPolicy.name` method and leave the policy nameless."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:131
#, no-wrap
msgid "Matching on paths and methods"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:136
msgid "Permission sets can also specify paths and methods as a comma-separated list.  If a path ends with the `*` wildcard, the query it generates matches all sub-paths.  Otherwise, it queries for an exact match and only matches that specific path:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:142
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.paths=/public*,/css/*,/js/*,/robots.txt    <1>\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET,HEAD\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:145
msgid "The `$$*$$` wildcard at the end of the path matches zero or more path segments, but never any word starting from the `/public` path.  For that reason, a path like `/public-info` is not matched by this pattern."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:146
#, no-wrap
msgid "Matching a path but not a method"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:149
msgid "The request is rejected if it matches one or more permission sets based on the path but none of the required methods."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:154
msgid "Given the preceding permission set, `GET /public/foo` would match both the path and method and therefore be allowed.  In contrast, `POST /public/foo` would match the path but not the method, and, therefore, be rejected."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:157
#, no-wrap
msgid "Matching multiple paths: longest path wins"
msgstr "匹配多条路径：最长的路径获胜"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:161
msgid "Matching is always done on the \"longest path wins\" basis.  Less specific permission sets are not considered if a more specific one has been matched:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:167
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:259
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.paths=/public/*\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET,HEAD\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:170
#, no-wrap
msgid ""
"quarkus.http.auth.permission.deny1.paths=/public/forbidden-folder/*\n"
"quarkus.http.auth.permission.deny1.policy=deny\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:176
msgid "Given the preceding permission set, `GET /public/forbidden-folder/foo` would match both permission sets' paths.  However, because the longer path matches the path of the `deny1` permission set, `deny1` is chosen, and the request is rejected."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:181
msgid "Subpath permissions precede root path permissions, as the `deny1` versus `permit1` permission example previously illustrated."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:183
msgid "This rule is further exemplified by a scenario where subpath permission allows access to a public resource while the root path permission necessitates authorization."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:189
#, no-wrap
msgid ""
"quarkus.http.auth.policy.user-policy.roles-allowed=user\n"
"quarkus.http.auth.permission.roles.paths=/api/*\n"
"quarkus.http.auth.permission.roles.policy=user-policy\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:192
#, no-wrap
msgid ""
"quarkus.http.auth.permission.public.paths=/api/noauth/*\n"
"quarkus.http.auth.permission.public.policy=permit\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:195
#, fuzzy, no-wrap
#| msgid "Matching multiple paths: longest path wins"
msgid "Matching multiple sub-paths: longest path to the `*` wildcard wins"
msgstr "匹配多条路径：最长的路径获胜"

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:199
msgid "Previous examples demonstrated matching all sub-paths when a path concludes with the `$$*$$` wildcard."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:202
msgid "This wildcard also applies in the middle of a path, representing a single path segment.  It cannot be mixed with other path segment characters; thus, path separators always enclose the `$$*$$` wildcard, as seen in the `/public/`$$*$$`/about-us` path."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:206
msgid "When several path patterns correspond to the same request path, the system selects the longest sub-path leading to the `$$*$$` wildcard.  In this context, every path segment character is more specific than the `$$*$$` wildcard."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:208
msgid "Here is a simple example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:215
#, no-wrap
msgid ""
"quarkus.http.auth.permission.secured.paths=/api/*/detail                    <1>\n"
"quarkus.http.auth.permission.secured.policy=authenticated\n"
"quarkus.http.auth.permission.public.paths=/api/public-product/detail        <2>\n"
"quarkus.http.auth.permission.public.policy=permit\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:217
msgid "Request paths like `/api/product/detail` can only be accessed by authenticated users."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:218
msgid "The path `/api/public-product/detail` is more specific, therefore accessible by anyone."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:224
msgid "All paths secured with the authorization using configuration should be tested.  Writing path patterns with multiple wildcards can be cumbersome.  Please make sure paths are authorized as you intended."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:227
msgid "In the following example, paths are ordered from the most specific to the least specific one:"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:228
#, no-wrap
msgid "Request path `/one/two/three/four/five` matches ordered from the most specific to the least specific path"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:241
#, no-wrap
msgid ""
"/one/two/three/four/five\n"
"/one/two/three/four/*\n"
"/one/two/three/*/five\n"
"/one/two/three/*/*\n"
"/one/two/*/four/five\n"
"/one/*/three/four/five\n"
"/*/two/three/four/five\n"
"/*/two/three/*/five\n"
"/*\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:247
msgid "The `$$*$$` wildcard at the end of the path matches zero or more path segments.  The `$$*$$` wildcard placed anywhere else matches exactly one path segment."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:249
#, no-wrap
msgid "Matching multiple paths: most specific method wins"
msgstr "匹配多条路径：最具体的方法获胜"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:253
msgid "When a path is registered with multiple permission sets, the permission sets explicitly specifying an HTTP method that matches the request take precedence.  In this instance, the permission sets without methods only come into effect if the request method does not match permission sets with the method specification."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:262
#, no-wrap
msgid ""
"quarkus.http.auth.permission.deny1.paths=/public/*\n"
"quarkus.http.auth.permission.deny1.policy=deny\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:267
msgid "The preceding permission set shows that `GET /public/foo` matches the paths of both permission sets.However, it specifically aligns with the explicit method of the `permit1` permission set.Therefore, `permit1` is selected, and the request is accepted."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:271
msgid "In contrast, `PUT /public/foo` does not match the method permissions of `permit1`. As a result, `deny1` is activated, leading to the rejection of the request."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:273
#, no-wrap
msgid "Matching multiple paths and methods: both win"
msgstr "匹配多条路径和方法：双赢"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:279
msgid "Sometimes, the previously described rules allow multiple permission sets to win simultaneously.  In that case, for the request to proceed, all the permissions must allow access.  For this to happen, both must either have specified the method or have no method.  Method-specific matches take precedence."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:284
#, no-wrap
msgid ""
"quarkus.http.auth.policy.user-policy1.roles-allowed=user\n"
"quarkus.http.auth.policy.admin-policy1.roles-allowed=admin\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:287
#, no-wrap
msgid ""
"quarkus.http.auth.permission.roles1.paths=/api/*,/restricted/*\n"
"quarkus.http.auth.permission.roles1.policy=user-policy1\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:290
#, no-wrap
msgid ""
"quarkus.http.auth.permission.roles2.paths=/api/*,/admin/*\n"
"quarkus.http.auth.permission.roles2.policy=admin-policy1\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:293
msgid "Given the preceding permission set, `GET /api/foo` would match both permission sets' paths, requiring both the `user` and `admin` roles."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:294
#, no-wrap
msgid "Configuration properties to deny access"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:297
msgid "The following configuration settings alter the role-based access control (RBAC) denying behavior:"
msgstr ""

#. type: Labeled list
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:298
#, no-wrap
msgid "`quarkus.security.jaxrs.deny-unannotated-endpoints=true|false`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:303
msgid "If set to true, access is denied for all Jakarta REST endpoints by default.  If a Jakarta REST endpoint has no security annotations, it defaults to the `@DenyAll` behavior.  This helps you to avoid accidentally exposing an endpoint that is supposed to be secured.  Defaults to `false`."
msgstr ""

#. type: Labeled list
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:304
#, no-wrap
msgid "`quarkus.security.jaxrs.default-roles-allowed=role1,role2`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:308
msgid "Defines the default role requirements for unannotated endpoints.  The `**` role is a special role that means any authenticated user.  This cannot be combined with `deny-unannotated-endpoints` because `deny` takes effect instead."
msgstr ""

#. type: Labeled list
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:309
#, no-wrap
msgid "`quarkus.security.deny-unannotated-members=true|false`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:312
msgid "If set to true, the access is denied to all CDI methods and Jakarta REST endpoints that do not have security annotations but are defined in classes that contain methods with security annotations.  Defaults to `false`."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:313
#, no-wrap
msgid "Disabling permissions"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:316
msgid "Permissions can be disabled at build time with an `enabled` property for each declared permission, such as:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:323
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.enabled=false\n"
"quarkus.http.auth.permission.permit1.paths=/public/*,/css/*,/js/*,/robots.txt\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET,HEAD\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:327
msgid "Permissions can be reenabled at runtime with a system property or environment variable, such as: `-Dquarkus.http.auth.permission.permit1.enabled=true`."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:328
#, no-wrap
msgid "Permission paths and HTTP root path"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:331
#, fuzzy
msgid "The `quarkus.http.root-path` configuration property changes the xref:http-reference.adoc#context-path[http endpoint context path]."
msgstr "`quarkus.http.root-path` 配置项被用于改变 link:http-reference.html#context-path[http节点上下文路径] 。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:333
msgid "By default, `quarkus.http.root-path` is prepended automatically to configured permission paths then do not use a forward slash, for example:"
msgstr "默认情况下， `quarkus.http.root-path` 会自动被加在配置的权限路径之前并且不需要指定一个前置的斜杠，例如："

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:337
#, no-wrap
msgid "quarkus.http.auth.permission.permit1.paths=public/*,css/*,js/*,robots.txt\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:340
msgid "This configuration is equivalent to the following:"
msgstr "该配置相当于以下内容："

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:344
#, no-wrap
msgid "quarkus.http.auth.permission.permit1.paths=${quarkus.http.root-path}/public/*,${quarkus.http.root-path}/css/*,${quarkus.http.root-path}/js/*,${quarkus.http.root-path}/robots.txt\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:348
msgid "A leading slash changes how the configured permission path is interpreted.  The configured URL is used as-is, and paths are not adjusted if the value of `quarkus.http.root-path` changes."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:349
#, no-wrap
msgid "Example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:353
#, no-wrap
msgid "quarkus.http.auth.permission.permit1.paths=/public/*,css/*,js/*,robots.txt\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:356
#, fuzzy
msgid "This configuration only impacts resources served from the fixed or static URL, `/public`, which might not match your application resources if `quarkus.http.root-path` has been set to something other than `/`."
msgstr "此配置将只影响从固定/静态URL `/public` 提供的资源，如果 `quarkus.http.root-path` 被设置为其他的 `/` ，那么它可能与您的应用程序资源不匹配。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:358
#, fuzzy
msgid "For more information, see link:https://quarkus.io/blog/path-resolution-in-quarkus/[Path Resolution in Quarkus]."
msgstr "更多信息见 link:https://quarkus.io/blog/path-resolution-in-quarkus/[Quarkus中的路径解析] 。"

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:360
#, no-wrap
msgid "Map `SecurityIdentity` roles"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:364
msgid "Winning role-based policy can map the `SecurityIdentity` roles to the deployment-specific roles.  These roles are then applicable for endpoint authorization by using the @RolesAllowed annotation."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:370
#, no-wrap
msgid ""
"quarkus.http.auth.policy.admin-policy1.roles.admin=Admin1 <1>\n"
"quarkus.http.auth.permission.roles1.paths=/*\n"
"quarkus.http.auth.permission.roles1.policy=admin-policy1\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:372
msgid "Map the `admin` role to `Admin1` role. The `SecurityIdentity` will have both `admin` and `Admin1` roles."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:374
#, no-wrap
msgid "Authorization using annotations"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:378
msgid "{project-name} includes built-in security to allow for link:https://en.wikipedia.org/wiki/Role-based_access_control[Role-Based Access Control (RBAC)] based on the common security annotations `@RolesAllowed`, `@DenyAll`, `@PermitAll` on REST endpoints and CDI beans."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:379
#, no-wrap
msgid "{project-name} annotation types summary"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:382
#, no-wrap
msgid "Annotation type"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:383
#, no-wrap
msgid "@DenyAll"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:384
#, no-wrap
msgid "Specifies that no security roles are allowed to invoke the specified methods."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:384
#, no-wrap
msgid "@PermitAll"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:387
#, no-wrap
msgid ""
"Specifies that all security roles are allowed to invoke the specified methods.\n"
"\n"
"`@PermitAll` lets everybody in, even without authentication."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:387
#, no-wrap
msgid "@RolesAllowed"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:390
#, no-wrap
msgid ""
"Specifies the list of security roles allowed to access methods in an application.\n"
"\n"
"As an equivalent to `@RolesAllowed(\"**\")`, {project-name} also provides the `io.quarkus.security.Authenticated` annotation that permits any authenticated user to access the resource."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:393
msgid "The following xref:subject-example[SubjectExposingResource example] demonstrates an endpoint that uses both Jakarta REST and Common Security annotations to describe and secure its endpoints."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:395
#, no-wrap
msgid "SubjectExposingResource example"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:399
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:477
#, no-wrap
msgid "import java.security.Principal;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:405
#, no-wrap
msgid ""
"import jakarta.annotation.security.RolesAllowed;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.core.Context;\n"
"import jakarta.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:408
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:488
#, no-wrap
msgid ""
"@Path(\"subject\")\n"
"public class SubjectExposingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:417
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"secured\")\n"
"    @RolesAllowed(\"Tester\") <1>\n"
"    public String getSubjectSecured(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal(); <2>\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:426
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"unsecured\")\n"
"    @PermitAll <3>\n"
"    public String getSubjectUnsecured(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal(); <4>\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:436
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"denied\")\n"
"    @DenyAll <5>\n"
"    public String getSubjectDenied(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:438
msgid "The `/subject/secured` endpoint requires an authenticated user with the granted \"Tester\" role through the use of the `@RolesAllowed(\"Tester\")` annotation."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:440
#, fuzzy
msgid "The endpoint obtains the user principal from the Jakarta REST `SecurityContext`.  This returns `non-null` for a secured endpoint."
msgstr "该节点通过 JAX-RS `SecurityContext` 获取用户principal。对于受保护节点它将永不为null。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:441
msgid "The `/subject/unsecured` endpoint allows for unauthenticated access by specifying the `@PermitAll` annotation."
msgstr "`/subject/unsecured` 节点通过使用 `@PermitAll` 注解来允许未认证的访问。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:442
msgid "The call to obtain the user principal returns `null` if the caller is unauthenticated and `non-null` if the caller is authenticated."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:444
msgid "The `/subject/denied` endpoint declares the `@DenyAll` annotation, disallowing all direct access to it as a REST method, regardless of the user calling it.  The method is still invokable internally by other methods in this class."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:446
msgid "If you plan to use standard security annotations on the IO thread, review the information in xref:security-proactive-authentication.adoc[Proactive Authentication]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:449
msgid "The `@RolesAllowed` annotation value supports xref:config-reference.adoc#property-expressions[property expressions] including default values and nested property expressions.  Configuration properties used with the annotation are resolved at runtime."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:450
#, no-wrap
msgid "Annotation value examples"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:453
#, no-wrap
msgid "Annotation"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:454
#, no-wrap
msgid "Value explanation"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:454
#, no-wrap
msgid "`@RolesAllowed(\"${admin-role}\")`"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:455
#, no-wrap
msgid "The endpoint allows users with the role denoted by the value of the `admin-role` property."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:455
#, no-wrap
msgid "`@RolesAllowed(\"${tester.group}-${tester.role}\")`"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:457
#, no-wrap
msgid "An example showing that the value can contain multiple variables."
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:457
#, no-wrap
msgid "`@RolesAllowed(\"${customer:User}\")`"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:460
#, no-wrap
msgid ""
"A default value demonstration.\n"
"The required role is denoted by the value of the `customer` property.\n"
"However, if that property is not specified, a role named `User` is required as a default."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:462
#, no-wrap
msgid "Example of a property expressions usage in the `@RolesAllowed` annotation"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:472
#, no-wrap
msgid ""
"admin=Administrator\n"
"tester.group=Software\n"
"tester.role=Tester\n"
"%prod.secured=User\n"
"%dev.secured=**\n"
"all-roles=Administrator,Software,Tester,User\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:485
#, no-wrap
msgid ""
"import jakarta.annotation.security.DenyAll;\n"
"import jakarta.annotation.security.PermitAll;\n"
"import jakarta.annotation.security.RolesAllowed;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.core.Context;\n"
"import jakarta.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:495
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"admin\")\n"
"    @RolesAllowed(\"${admin}\") <1>\n"
"    public String getSubjectSecuredAdmin(@Context SecurityContext sec) {\n"
"        return getUsername(sec);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:502
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"software-tester\")\n"
"    @RolesAllowed(\"${tester.group}-${tester.role}\") <2>\n"
"    public String getSubjectSoftwareTester(@Context SecurityContext sec) {\n"
"        return getUsername(sec);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:509
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"user\")\n"
"    @RolesAllowed(\"${customer:User}\") <3>\n"
"    public String getSubjectUser(@Context SecurityContext sec) {\n"
"        return getUsername(sec);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:516
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"secured\")\n"
"    @RolesAllowed(\"${secured}\") <4>\n"
"    public String getSubjectSecured(@Context SecurityContext sec) {\n"
"        return getUsername(sec);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:523
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"list\")\n"
"    @RolesAllowed(\"${all-roles}\") <5>\n"
"    public String getSubjectList(@Context SecurityContext sec) {\n"
"        return getUsername(sec);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:530
#, no-wrap
msgid ""
"    private String getUsername(SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:532
msgid "The `@RolesAllowed` annotation value is set to the value of `Administrator`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:534
msgid "This `/subject/software-tester` endpoint requires an authenticated user that has been granted the role of \"Software-Tester\".  It is possible to use multiple expressions in the role definition."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:535
msgid "This `/subject/user` endpoint requires an authenticated user that has been granted the role \"User\" through the use of the `@RolesAllowed(\"${customer:User}\")` annotation because we did not set the configuration property `customer`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:537
msgid "In production, this `/subject/secured` endpoint requires an authenticated user with the `User` role.  In development mode, it allows any authenticated user."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:538
msgid "Property expression `all-roles` will be treated as a collection type `List`, therefore, the endpoint will be accessible for roles `Administrator`, `Software`, `Tester` and `User`."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:540
#, no-wrap
msgid "Permission annotation"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:544
msgid "Quarkus also provides the `io.quarkus.security.PermissionsAllowed` annotation, which authorizes any authenticated user with the given permission to access the resource.  This annotation is an extension of the common security annotations and checks the permissions granted to a `SecurityIdentity` instance."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:545
#, no-wrap
msgid "Example of endpoints secured with the `@PermissionsAllowed` annotation"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:550
#, no-wrap
msgid "package org.acme.crud;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:557
#, no-wrap
msgid ""
"import io.quarkus.arc.Arc;\n"
"import io.vertx.ext.web.RoutingContext;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.POST;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.QueryParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:559
#, no-wrap
msgid "import io.quarkus.security.PermissionsAllowed;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:564
#, no-wrap
msgid ""
"import java.security.BasicPermission;\n"
"import java.security.Permission;\n"
"import java.util.Collection;\n"
"import java.util.Collections;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:567
#, no-wrap
msgid ""
"@Path(\"/crud\")\n"
"public class CRUDResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:575
#, no-wrap
msgid ""
"    @PermissionsAllowed(\"create\") <1>\n"
"    @PermissionsAllowed(\"update\")\n"
"    @POST\n"
"    @Path(\"/modify/repeated\")\n"
"    public String createOrUpdate() {\n"
"        return \"modified\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:582
#, no-wrap
msgid ""
"    @PermissionsAllowed(value = {\"create\", \"update\"}, inclusive=true) <2>\n"
"    @POST\n"
"    @Path(\"/modify/inclusive\")\n"
"    public String createOrUpdate(Long id) {\n"
"        return id + \" modified\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:589
#, no-wrap
msgid ""
"    @PermissionsAllowed({\"see:detail\", \"see:all\", \"read\"}) <3>\n"
"    @GET\n"
"    @Path(\"/id/{id}\")\n"
"    public String getItem(String id) {\n"
"        return \"item-detail-\" + id;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:597
#, no-wrap
msgid ""
"    @PermissionsAllowed(value = \"list\", permission = CustomPermission.class) <4>\n"
"    @Path(\"/list\")\n"
"    @GET\n"
"    public Collection<String> list(@QueryParam(\"query-options\") String queryOptions) {\n"
"        // your business logic comes here\n"
"        return Collections.emptySet();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:599
#, no-wrap
msgid "    public static class CustomPermission extends BasicPermission {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:603
#, no-wrap
msgid ""
"        public CustomPermission(String name) {\n"
"            super(name);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:613
#, no-wrap
msgid ""
"        @Override\n"
"        public boolean implies(Permission permission) {\n"
"            var event = Arc.container().instance(RoutingContext.class).get(); <5>\n"
"            var publicContent = \"public-content\".equals(event.request().params().get(\"query-options\"));\n"
"            var hasPermission = getName().equals(permission.getName());\n"
"            return hasPermission && publicContent;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:615
msgid "The resource method `createOrUpdate` is only accessible for a user with both `create` and `update` permissions."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:618
msgid "By default, at least one of the permissions specified through one annotation instance is required.  You can require all permissions by setting `inclusive=true`.  Both resource methods `createOrUpdate` have equal authorization requirements."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:619
msgid "Access is granted to `getItem` if `SecurityIdentity` has either `read` permission or `see` permission and one of the `all` or `detail` actions."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:621
msgid "You can use your preferred `java.security.Permission` implementation.  By default, string-based permission is performed by `io.quarkus.security.StringPermission`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:622
msgid "Permissions are not beans, therefore the only way to obtain bean instances is programmatically by using `Arc.container()`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:624
msgid "If you plan to use the `@PermissionsAllowed` on the IO thread, review the information in xref:security-proactive-authentication.adoc[Proactive Authentication]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:627
msgid "`@PermissionsAllowed` is not repeatable on the class level due to a limitation with Quarkus interceptors.  For more information, see the xref:cdi-reference.adoc#repeatable-interceptor-bindings[Repeatable interceptor bindings] section of the Quarkus \"CDI reference\" guide."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:630
msgid "The easiest way to add permissions to a role-enabled `SecurityIdentity` instance is to map roles to permissions.  Use xref:authorization-using-configuration[Authorization using configuration] to grant the required `SecurityIdentity` permissions for `CRUDResource` endpoints to authenticated requests, as outlined in the following example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:637
#, no-wrap
msgid ""
"quarkus.http.auth.policy.role-policy1.permissions.user=see:all                                      <1>\n"
"quarkus.http.auth.policy.role-policy1.permissions.admin=create,update,read                          <2>\n"
"quarkus.http.auth.permission.roles1.paths=/crud/modify/*,/crud/id/*                                 <3>\n"
"quarkus.http.auth.permission.roles1.policy=role-policy1\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:642
#, no-wrap
msgid ""
"quarkus.http.auth.policy.role-policy2.permissions.user=list\n"
"quarkus.http.auth.policy.role-policy2.permission-class=org.acme.crud.CRUDResource$CustomPermission  <4>\n"
"quarkus.http.auth.permission.roles2.paths=/crud/list\n"
"quarkus.http.auth.permission.roles2.policy=role-policy2\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:645
msgid "Add the permission `see` and the action `all` to the `SecurityIdentity` instance of the `user` role.  Similarly, for the `@PermissionsAllowed` annotation, `io.quarkus.security.StringPermission` is used by default."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:646
msgid "Permissions `create`, `update`, and `read` are mapped to the role `admin`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:648
msgid "The role policy `role-policy1` allows only authenticated requests to access `/crud/modify` and `/crud/id` sub-paths.  For more information about the path-matching algorithm, see xref:matching-multiple-paths[Matching multiple paths: longest path wins] later in this guide."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:651
msgid "You can specify a custom implementation of the `java.security.Permission` class.  Your custom class must define exactly one constructor that accepts the permission name and optionally some actions, for example, `String` array.  In this scenario, the permission `list` is added to the `SecurityIdentity` instance as `new CustomPermission(\"list\")`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:655
msgid "You can also create a custom `java.security.Permission` class with additional constructor parameters.  These additional parameters get matched with arguments of the method annotated with the `@PermissionsAllowed` annotation.  Later, Quarkus instantiates your custom permission with actual arguments, with which the method annotated with the `@PermissionsAllowed` has been invoked."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:656
#, no-wrap
msgid "Example of a custom `java.security.Permission` class that accepts additional arguments"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:661
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:724
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:757
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:793
#, no-wrap
msgid "package org.acme.library;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:665
#, no-wrap
msgid ""
"import java.security.Permission;\n"
"import java.util.Arrays;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:667
#, no-wrap
msgid "public class LibraryPermission extends Permission {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:670
#, no-wrap
msgid ""
"    private final Set<String> actions;\n"
"    private final Library library;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:676
#, no-wrap
msgid ""
"    public LibraryPermission(String libraryName, String[] actions, Library library) { <1>\n"
"        super(libraryName);\n"
"        this.actions = Set.copyOf(Arrays.asList(actions));\n"
"        this.library = library;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:688
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean implies(Permission requiredPermission) {\n"
"        if (requiredPermission instanceof LibraryPermission) {\n"
"            LibraryPermission that = (LibraryPermission) requiredPermission;\n"
"            boolean librariesMatch = getName().equals(that.getName());\n"
"            boolean requiredLibraryIsSublibrary = library.isParentLibraryOf(that.library);\n"
"            boolean hasOneOfRequiredActions = that.actions.stream().anyMatch(actions::contains);\n"
"            return (librariesMatch || requiredLibraryIsSublibrary) && hasOneOfRequiredActions;\n"
"        }\n"
"        return false;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:690
#, no-wrap
msgid "    // here comes your own implementation of the `java.security.Permission` class methods\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:692
#, no-wrap
msgid "    public static abstract class Library {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:694
#, no-wrap
msgid "        protected String description;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:696
#, no-wrap
msgid "        abstract boolean isParentLibraryOf(Library library);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:698
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:700
#, no-wrap
msgid "    public static class MediaLibrary extends Library {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:706
#, no-wrap
msgid ""
"        @Override\n"
"        boolean isParentLibraryOf(Library library) {\n"
"            return library instanceof MediaLibrary;\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:711
#, no-wrap
msgid ""
"    public static class TvLibrary extends MediaLibrary {\n"
"        // TvLibrary specific implementation of the 'isParentLibraryOf' method\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:716
msgid "There must be exactly one constructor of a custom `Permission` class.  The first parameter is always considered to be a permission name and must be of type `String`.  Quarkus can optionally pass permission actions to the constructor.  For this to happen, declare the second parameter as `String[]`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:718
msgid "The `LibraryPermission` class permits access to the current or parent library if `SecurityIdentity` is allowed to perform one of the required actions, for example, `read`, `write`, or `list`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:720
msgid "The following example shows how the `LibraryPermission` class can be used:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:728
#, no-wrap
msgid ""
"import io.quarkus.security.PermissionsAllowed;\n"
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import org.acme.library.LibraryPermission.Library;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:731
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class LibraryService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:737
#, no-wrap
msgid ""
"    @PermissionsAllowed(value = \"tv:write\", permission = LibraryPermission.class) <1>\n"
"    public Library updateLibrary(String newDesc, Library update) {\n"
"        update.description = newDesc;\n"
"        return update;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:744
#, no-wrap
msgid ""
"    @PermissionsAllowed(value = \"tv:write\", permission = LibraryPermission.class, params = \"library\") <2>\n"
"    @PermissionsAllowed(value = {\"tv:read\", \"tv:list\"}, permission = LibraryPermission.class)\n"
"    public Library migrateLibrary(Library migrate, Library library) {\n"
"        // migrate libraries\n"
"        return library;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:746
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:786
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:804
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:870
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:749
msgid "The formal parameter `update` is identified as the first `Library` parameter and gets passed to the `LibraryPermission` class.  However, the `LibraryPermission` must be instantiated each time the `updateLibrary` method is invoked."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:751
msgid "Here, the first `Library` parameter is `migrate`; therefore, the `library` parameter gets marked explicitly through `PermissionsAllowed#params`.  The permission constructor and the annotated method must have the parameter `library` set; otherwise, validation fails."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:752
#, no-wrap
msgid "Example of a resource secured with the `LibraryPermission`"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:764
#, no-wrap
msgid ""
"import io.quarkus.security.PermissionsAllowed;\n"
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.PUT;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.PathParam;\n"
"import org.acme.library.LibraryPermission.Library;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:767
#, no-wrap
msgid ""
"@Path(\"/library\")\n"
"public class LibraryResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:770
#, no-wrap
msgid ""
"    @Inject\n"
"    LibraryService libraryService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:777
#, no-wrap
msgid ""
"    @PermissionsAllowed(value = \"tv:write\", permission = LibraryPermission.class)\n"
"    @PUT\n"
"    @Path(\"/id/{id}\")\n"
"    public Library updateLibrary(@PathParam(\"id\") Integer id, Library library) {\n"
"        ...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:784
#, no-wrap
msgid ""
"    @PUT\n"
"    @Path(\"/service-way/id/{id}\")\n"
"    public Library updateLibrarySvc(@PathParam(\"id\") Integer id, Library library) {\n"
"        String newDescription = \"new description \" + id;\n"
"        return libraryService.updateLibrary(newDescription, library);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:789
msgid "Similarly to the `CRUDResource` example, the following example shows how you can grant a user with the `admin` role permissions to update `MediaLibrary`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:795
#, no-wrap
msgid "import io.quarkus.runtime.annotations.RegisterForReflection;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:798
#, no-wrap
msgid ""
"@RegisterForReflection <1>\n"
"public class MediaLibraryPermission extends LibraryPermission {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:802
#, no-wrap
msgid ""
"    public MediaLibraryPermission(String libraryName, String[] actions) {\n"
"        super(libraryName, actions, new MediaLibrary());    <2>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:806
msgid "When building a native executable, the permission class must be registered for reflection unless it is also used in at least one `io.quarkus.security.PermissionsAllowed#name` parameter."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:807
msgid "We want to pass the `MediaLibrary` instance to the `LibraryPermission` constructor."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:814
#, no-wrap
msgid ""
"quarkus.http.auth.policy.role-policy3.permissions.admin=media-library:list,media-library:read,media-library:write   <1>\n"
"quarkus.http.auth.policy.role-policy3.permission-class=org.acme.library.MediaLibraryPermission\n"
"quarkus.http.auth.permission.roles3.paths=/library/*\n"
"quarkus.http.auth.permission.roles3.policy=role-policy3\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:817
msgid "Grants the permission `media-library`, which permits `read`, `write`, and `list` actions.  Because `MediaLibrary` is the `TvLibrary` class parent, a user with the `admin` role is also permitted to modify `TvLibrary`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:820
msgid "The `/library/*` path can be tested from a Keycloak provider Dev UI page, because the user `alice` which is created automatically by the xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] has an `admin` role."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:824
msgid "The examples provided so far demonstrate role-to-permission mapping.  It is also possible to programmatically add permissions to the `SecurityIdentity` instance.  In the following example, xref:security-customization.adoc#security-identity-customization[`SecurityIdentity` is customized] to add the same permission that was previously granted with the HTTP role-based policy."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:825
#, no-wrap
msgid "Example of adding the `LibraryPermission` programmatically to `SecurityIdentity`"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:831
#, no-wrap
msgid ""
"import java.security.Permission;\n"
"import java.util.function.Function;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:839
#, no-wrap
msgid ""
"import io.quarkus.security.identity.AuthenticationRequestContext;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
"import io.quarkus.security.identity.SecurityIdentityAugmentor;\n"
"import io.quarkus.security.runtime.QuarkusSecurityIdentity;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:842
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class PermissionsIdentityAugmentor implements SecurityIdentityAugmentor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:850
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<SecurityIdentity> augment(SecurityIdentity identity, AuthenticationRequestContext context) {\n"
"        if (isNotAdmin(identity)) {\n"
"            return Uni.createFrom().item(identity);\n"
"        }\n"
"        return Uni.createFrom().item(build(identity));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:854
#, no-wrap
msgid ""
"    private boolean isNotAdmin(SecurityIdentity identity) {\n"
"        return identity.isAnonymous() || !\"admin\".equals(identity.getPrincipal().getName());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:868
#, no-wrap
msgid ""
"    SecurityIdentity build(SecurityIdentity identity) {\n"
"        Permission possessedPermission = new MediaLibraryPermission(\"media-library\",\n"
"                new String[] { \"read\", \"write\", \"list\"}); <1>\n"
"        return QuarkusSecurityIdentity.builder(identity)\n"
"                .addPermissionChecker(new Function<Permission, Uni<Boolean>>() { <2>\n"
"                    @Override\n"
"                    public Uni<Boolean> apply(Permission requiredPermission) {\n"
"                        boolean accessGranted = possessedPermission.implies(requiredPermission);\n"
"                        return Uni.createFrom().item(accessGranted);\n"
"                    }\n"
"                })\n"
"                .build();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:873
msgid "The permission `media-library` that was created can perform `read`, `write`, and `list` actions.  Because `MediaLibrary` is the `TvLibrary` class parent, a user with the `admin` role is also permitted to modify `TvLibrary`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:874
msgid "You can add a permission checker through `io.quarkus.security.runtime.QuarkusSecurityIdentity.Builder#addPermissionChecker`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:876
msgid "Annotation-based permissions do not work with custom xref:security-customization.adoc#jaxrs-security-context[Jakarta REST SecurityContexts] because there are no permissions in `jakarta.ws.rs.core.SecurityContext`."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:877
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:880
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:881
msgid "xref:security-architecture.adoc[Quarkus Security architecture]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:882
msgid "xref:security-authentication-mechanisms.adoc#other-supported-authentication-mechanisms[Authentication mechanisms in Quarkus]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:883
msgid "xref:security-basic-authentication.adoc[Basic authentication]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:884
msgid "xref:security-getting-started-tutorial.adoc[Getting Started with Security using Basic authentication and Jakarta Persistence]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:884
msgid "xref:security-oidc-bearer-token-authentication.adoc#token-scopes-and-security-identity-permissions[OpenID Connect Bearer Token Scopes And SecurityIdentity Permissions]"
msgstr ""
