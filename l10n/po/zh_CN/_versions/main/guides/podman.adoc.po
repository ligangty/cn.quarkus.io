# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-12 02:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/main/guides/podman.adoc
#, fuzzy, no-wrap
msgid "Using Podman with Quarkus"
msgstr "在Quarkus中使用Podman"

#: _versions/main/guides/podman.adoc
msgid "https://podman.io/[Podman] is an open-source, daemonless, and rootless container engine for developing, managing, and running OCI Containers on Linux, Windows and Mac. It can be used to support the container functionality and Dev Services on Quarkus."
msgstr ""

#. type: Title ==
#: _versions/main/guides/podman.adoc
#, fuzzy, no-wrap
msgid "Installing Podman"
msgstr "在Linux上安装Podman"

#: _versions/main/guides/podman.adoc
msgid "Podman's install approach varies depending on the operating system you are using, and the required steps also change over time depending on the version of Podman. For Mac and Windows we highly recommend installing through the Podman Desktop graphical application. It is the simplest option with the least number of steps, it adds additional functionality like automatic start, and it helps manage future updates. There is also a CLI-only option that may be used. However, this setup requires additional manual tasks to manage, update, and launch the Podman Machine environment."
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "The Homebrew package manager on Mac (*brew*) *should not be used to install Podman* as it results in an unverified combination of components. This is due to Homebrew sharing dependencies between projects, along with limited vetting of upgrade requests. As an example, there were several instances where an update to qemu broke on Apple Silicon, preventing Podman machine VMs from booting."
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "On Linux, Podman is integrated as part of the operating system, and installed through the system's packager manager. As with Mac, and Windows, Podman Desktop can also be installed to supplement the Podman CLI. However, on Linux, Podman Desktop acts as a client to the native Podman integration, and does not manage the underlying Podman installation."
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "See https://podman-desktop.io/downloads/ for the latest version of Podman Desktop or pick the version that suits your operating system from the list below:"
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "https://podman-desktop.io/macos/[MacOS]"
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "https://podman-desktop.io/windows/[Windows]"
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "https://podman-desktop.io/linux/[Linux]"
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "Additionally, if you are using Linux, see the Podman https://podman.io/docs/installation#installing-on-linux[Linux installation documentation] for instructions installing Podman to your specific Linux distribution."
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "Docker compatibility mode"
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "When installing Podman Desktop on Mac or Windows, it's important to enable Docker compatibility mode when prompted. This will ensure the podman-mac-helper is setup on your behalf (normally a manual action you are prompted to do after start), necessary for supporting /var/run/docker.sock (privileged location). It will also install support for Docker Compose."
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "Platform differences"
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "While interacting with containers is mostly identical between Mac, Windows, and Linux, there are important environmental differences to be aware of. Notably, the way in which containers are executed is different, since \"Containers are Linux\". More specifically, containers contain Linux userland binaries with a dependency on the Linux kernel syscall interface. As such, Linux containers cannot run natively on macOS or Windows; they instead require the use of a virtual machine (VM), running Linux, to host them. For systems that require it, Podman includes a subsystem called Podman Machine that is used to manage this VM. Podman Desktop performs a guided interactive setup of this VM, and will automatically launch it on your behalf."
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "Rootful vs Rootless"
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "Podman supports two modes of operation: rootful, in which case the container runs as root on the Linux host (or VM in the case of Mac/Windows), and rootless, where the container runs under a standard Unix user account. The latter offers significantly stronger security, but some containers are not capable of running under the increased restrictions. As an example, if a container creates new devices, loopback mount points, and performs other highly restricted operations, then they must be run as root. Note, that this is not to be confused with the USER value specified in Containerfile/Dockerfile, which refers to how processes inside the container perceive themselves. In rootless, processes running in a container with a USER of \"root\" will appear to each other as root, but due to pid namespacing, they will actually be running as a standard restricted user account on the host system."
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "Configuring on Win & Mac"
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "On systems which involve a Podman Machine managed VM (Mac & Windows), container clients and Podman commands communicate remotely to either a rootful or rootless system service running the VM. Which is used is determined by the `rootful` setting of the Podman machine. For maximal compatibility, Podman Desktop defaults to enabling rootful for new machine instances. There is limited security impact to this since the VM itself is running under a user process. This can also be changed via the podman commands:"
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "Configuring on Linux"
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "On Linux systems, it's recommended to configure client access in a rootless configuration using a user systemd service."
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "This can be enabled using the following command:"
msgstr ""

#. type: Title ===
#: _versions/main/guides/podman.adoc
#, fuzzy, no-wrap
msgid "Setting DOCKER_HOST on Linux"
msgstr "在Linux上设置DOCKER_HOST"

#: _versions/main/guides/podman.adoc
msgid "With the above rootless setup on Linux, you will need to configure clients, such as Quarkus and testcontainers by setting the `DOCKER_HOST` environment variable to point to the user service podman socket. The path be set using an expression which queries the path using the podman command:"
msgstr ""

#: _versions/main/guides/podman.adoc
msgid "Other Linux settings"
msgstr ""

#. type: Title ==
#: _versions/main/guides/podman.adoc
#, fuzzy, no-wrap
msgid "Short names of images"
msgstr "图像的短名称"

#: _versions/main/guides/podman.adoc
#, fuzzy
msgid ""
"Testcontainers and Quarkus Dev Services also expect the container service they make requests against to be non-interactive.\n"
"In case you have multiple registries configured in your Docker or Podman configuration, and when using short image names, Podman responds with a prompt asking which registry should be used to pull images."
msgstr "Testcontainers 和 Quarkus Dev Services 还希望它们请求的容器服务是非交互式的。如果您在 Docker 或 Podman 配置中配置了多个注册表，并且使用了简短的镜像名称，Podman 会提示您应使用哪个注册表来提取镜像。"

#: _versions/main/guides/podman.adoc
#, fuzzy
msgid ""
"While we recommend you to avoid short names and always use fully specified names including the registry, Testcontainers unfortunately relies on short names internally for the time being.\n"
"If you are using Testcontainers, either directly or through Dev Services, you need to disable this prompt by setting the `short-name-mode=\"disabled\"` configuration property of Podman in `/etc/containers/registries.conf`."
msgstr "我们建议您避免使用简短的名称，始终使用完整指定的名称（包括注册表），但不幸的是，Testcontainers 内部暂时依赖于简短的名称。如果您直接或通过 Dev Services 使用 Testcontainers，则需要通过在 `/etc/containers/registries.conf` 中设置 Podman 的 `short-name-mode=\"disabled\"` 配置属性来禁用此提示。"
