# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-12-03 02:24+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:7
#, no-wrap
msgid "Protect a service application by using OpenID Connect (OIDC) Bearer token authentication"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:17
msgid "Use the Quarkus OpenID Connect (OIDC) extension to secure a Jakarta REST application with Bearer token authentication.  The bearer tokens are issued by OIDC and OAuth 2.0 compliant authorization servers, such as link:https://www.keycloak.org[Keycloak]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:19
msgid "For more information about OIDC Bearer token authentication, see the Quarkus xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) Bearer token authentication] guide."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:21
msgid "If you want to protect web applications by using OIDC Authorization Code Flow authentication, see the xref:security-oidc-code-flow-authentication.adoc[OpenID Connect authorization code flow mechanism for protecting web applications] guide."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:24
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:29
msgid "The https://stedolan.github.io/jq/[jq command-line processor tool]"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:30
#, no-wrap
msgid "Architecture"
msgstr "架构"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:33
#, fuzzy
msgid "This example shows how you can build a simple microservice that offers two endpoints:"
msgstr "在该例子中，我们建立了一个非常简单的微服务并提供了两个节点："

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:35
msgid "`/api/users/me`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:36
msgid "`/api/admin`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:38
#, fuzzy
#| msgid "These endpoints are protected and can only be accessed if a client is sending a bearer token along with the request, which must be valid (e.g.: signature, expiration and audience) and trusted by the microservice."
msgid "These endpoints are protected and can only be accessed if a client sends a bearer token along with the request, which must be valid (for example, signature, expiration, and audience) and trusted by the microservice."
msgstr "这些节点是受保护的，只有当客户端将一个bearer token与请求一起发送时才能被访问，而且该token必须是有效的（例如：签名、过期时间和受众），并且要得到微服务的信任。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:41
#, fuzzy
#| msgid "The bearer token is issued by a Keycloak Server and represents the subject to which the token was issued for. For being an OAuth 2.0 Authorization Server, the token also references the client acting on behalf of the user."
msgid "The bearer token is issued by a Keycloak server and represents the subject for which the token was issued.  Because it is an OAuth 2.0 Authorization server, the token also references the client acting on the user's behalf."
msgstr "不记名令牌是由Keycloak服务器颁发的，并代表令牌发放对象的主体。对于OAuth 2.0授权服务器来说，该令牌还引用了代表用户的客户端。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:44
#, fuzzy
#| msgid "The `/api/users/me` endpoint can be accessed by any user with a valid token. As a response, it returns a JSON document with details about the user where these details are obtained from the information carried on the token."
msgid "Any user with a valid token can access the `/api/users/me` endpoint.  As a response, it returns a JSON document with user details obtained from the information in the token."
msgstr "端点 `/api/users/me` 可由任何拥有有效令牌的用户访问。作为响应，它返回一个JSON文档，其中包含关于用户的细节，这些细节是从令牌上携带的信息获得的。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:47
#, fuzzy
#| msgid "The `/api/admin` endpoint is protected with RBAC (Role-Based Access Control) where only users granted with the `admin` role can access. At this endpoint, we use the `@RolesAllowed` annotation to declaratively enforce the access constraint."
msgid "The `/api/admin` endpoint is protected with RBAC (Role-Based Access Control), which only users with the `admin` role can access.  At this endpoint, the `@RolesAllowed` annotation is used to enforce the access constraint declaratively."
msgstr "端点 `/api/admin` 受到RBAC（基于角色的访问控制）的保护，只有被授予 `admin` 角色的用户可以访问。在这个端点，我们使用 `@RolesAllowed` 注解来声明性地执行访问限制。"

#. type: Title ==
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:48
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:52
#, fuzzy
#| msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgid "Follow the instructions in the next sections and create the application step by step.  You can also go straight to the completed example."
msgstr "我们建议你按照下面几节的说明，一步一步地创建应用程序。然而，你可以直接进入已完成的例子。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:54
#, fuzzy
#| msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgid "You can clone the Git repository by running the command `git clone {quickstarts-clone-url}`, or you can download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或者下载一个 {quickstarts-archive-url}[存档]。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:56
#, fuzzy
#| msgid "The solution is located in the `security-openid-connect-quickstart` {quickstarts-tree-url}/security-openid-connect-quickstart[directory]."
msgid "The solution is located in the `security-openid-connect-quickstart` link:{quickstarts-tree-url}/security-openid-connect-quickstart[directory]."
msgstr "该解决方案位于 `security-openid-connect-quickstart` {quickstarts-tree-url}/security-openid-connect-quickstart[目录]中。"

#. type: Title ==
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:60
#, no-wrap
msgid "Create the Maven project"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:64
msgid "You can either create a new Maven project with the `oidc` extension or you can add the extension to an existing Maven project.  Complete one of the following commands:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:66
#, fuzzy
#| msgid "First, we need a new project. Create a new project with the following command:"
msgid "To create a new Maven project, use the following command:"
msgstr "首先，我们需要一个新的项目。用以下命令创建一个新项目："

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:74
msgid "This command generates a Maven project, importing the `oidc` extension which is an implementation of OIDC for Quarkus."
msgstr "该命令生成了一个Maven项目，导入了 `oidc` 扩展，这个扩展是Quarkus的OIDC实现。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:77
msgid "If you already have your Quarkus project configured, you can add the `oidc` extension to your project by running the following command in your project base directory:"
msgstr "如果你已经配置了你的Quarkus项目，你可以通过在你的项目基础目录下运行以下命令，将 `oidc` 扩展加入到你的项目中去："

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:83
#, fuzzy
#| msgid "This will add the following to your build file:"
msgid "The following configuration gets added to your build file:"
msgstr "这将在您的构建文件中添加以下内容："

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:85
msgid "Using Maven (pom.xml):"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:93
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-oidc</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:97
#, fuzzy
#| msgid "build.gradle"
msgid "Using Gradle (build.gradle):"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:103
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-oidc\")\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:107
#, no-wrap
msgid "Write the application"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:110
#, fuzzy
msgid "Implement the `/api/users/me` endpoint as shown in the following example, which is a regular Jakarta REST resource:"
msgstr "让我们从实现 `/api/users/me` 端点开始。从下面的源代码可以看出，它只是一个普通的JAX-RS资源："

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:115
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:159
#, no-wrap
msgid "package org.acme.security.openid.connect;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:120
#, no-wrap
msgid ""
"import jakarta.annotation.security.RolesAllowed;\n"
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:123
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.NoCache;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:126
#, no-wrap
msgid ""
"@Path(\"/api/users\")\n"
"public class UsersResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:129
#, no-wrap
msgid ""
"    @Inject\n"
"    SecurityIdentity securityIdentity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:137
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/me\")\n"
"    @RolesAllowed(\"user\")\n"
"    @NoCache\n"
"    public User me() {\n"
"        return new User(securityIdentity);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:139
#, no-wrap
msgid "    public static class User {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:141
#, no-wrap
msgid "        private final String userName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:145
#, no-wrap
msgid ""
"        User(SecurityIdentity securityIdentity) {\n"
"            this.userName = securityIdentity.getPrincipal().getName();\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:151
#, no-wrap
msgid ""
"        public String getUserName() {\n"
"            return userName;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:154
msgid "Implement the `/api/admin` endpoint as shown in the following simple example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:165
#, no-wrap
msgid ""
"import jakarta.annotation.security.RolesAllowed;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:168
#, no-wrap
msgid ""
"@Path(\"/api/admin\")\n"
"public class AdminResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:176
#, no-wrap
msgid ""
"    @GET\n"
"    @RolesAllowed(\"admin\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String admin() {\n"
"        return \"granted\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:182
#, fuzzy
#| msgid "The source code for the `/api/admin` endpoint is also very simple. The main difference here is that we are using a `@RolesAllowed` annotation to make sure that only users granted with the `admin` role can access the endpoint:"
msgid "The main difference in this example is that the `@RolesAllowed` annotation is used to verify that only users granted the `admin` role can access the endpoint."
msgstr "端点 `/api/admin` 的源代码也非常简单。这里的主要区别是，我们使用 `@RolesAllowed` 注解来确保只有被授予 `admin` 角色的用户才能访问该端点："

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:185
msgid "Injection of the `SecurityIdentity` is supported in both `@RequestScoped` and `@ApplicationScoped` contexts."
msgstr "在 `@RequestScoped` 和 `@ApplicationScoped` 的上下文中都支持 `SecurityIdentity` 注入。"

#. type: Title ==
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:186
#, no-wrap
msgid "Configure the application"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:189
msgid "Configure the Quarkus OpenID Connect (OIDC) extension by setting the following configuration properties in the `src/main/resources/application.properties` file."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:196
#, no-wrap
msgid ""
"%prod.quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus\n"
"quarkus.oidc.client-id=backend-service\n"
"quarkus.oidc.credentials.secret=secret\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:199
#, no-wrap
msgid ""
"# Tell Dev Services for Keycloak to import the realm file\n"
"# This property is not effective when running the application in JVM or Native modes\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:201
#, no-wrap
msgid "quarkus.keycloak.devservices.realm-path=quarkus-realm.json\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:205
msgid "Where:"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:209
msgid "`%prod.quarkus.oidc.auth-server-url` sets the base URL of the OpenID Connect (OIDC) server.  The `%prod.` profile prefix ensures that `Dev Services for Keycloak` launches a container when you run the application in development (dev) mode.  For more information, see the xref:keycloak-dev-mode[Run the application in dev mode] section."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:211
msgid "`quarkus.oidc.client-id` sets a client-ID that identifies the application."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:212
msgid "`quarkus.oidc.credentials.secret` sets the client secret, which is used by the `client_secret_basic` authentication method."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:214
msgid "For more information, see the Quarkus xref:security-oidc-configuration-properties-reference.adoc[OpenID Connect (OIDC) configuration properties] guide."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:216
#, no-wrap
msgid "Start and configure the Keycloak server"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:220
#, fuzzy
msgid "Put the link:{quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[realm configuration file] on the classpath (`target/classes` directory) so that it gets imported automatically when running in dev mode.  You do not need to do this if you have already built a link:{quickstarts-tree-url}/security-openid-connect-quickstart[complete solution], in which case, this realm file is added to the classpath during the build."
msgstr "当你以开发模式运行应用程序时，不要启动Keycloak服务器 - `Keycloak开发模式` 将启动一个容器。更多信息请参见下面在 link:#keycloak-dev-mode[在keycloak开发模式下运行应用程序] 的部分。确保把{quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[境界配置文件]放在classpath（ `target/classes` 目录）上，以便在开发模式下运行时自动导入--除非你已经构建了{quickstarts-tree-url}/security-openid-connect-quickstart[完整解决方案]，这样的话，这个领域文件会在构建时被加入classpath。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:225
msgid "Do not start the Keycloak server when you run the application in dev mode; `Dev Services for Keycloak` will start a container.  For more information, see the xref:keycloak-dev-mode[Run the application in dev mode] section."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:228
#, fuzzy
msgid "To start a Keycloak server, you can use Docker to run the following command:"
msgstr "要启动Keycloak服务器，您可以使用Docker服务，且只需运行以下命令："

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:233
#, no-wrap
msgid "docker run --name keycloak -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=admin -p 8180:8080 quay.io/keycloak/keycloak:{keycloak.version} start-dev\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:236
#, fuzzy
#| msgid "where `keycloak.version` should be set to `17.0.0` or higher."
msgid "Where the `keycloak.version` is set to version `17.0.0` or later."
msgstr "其中 `keycloak.version` 应该设置为 `17.0.0` 或更高。"

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:237
#, fuzzy
#| msgid "You should be able to access your Keycloak Server at http://localhost:8180[localhost:8180]."
msgid "You can access your Keycloak Server at http://localhost:8180[localhost:8180]."
msgstr "你应该能够通过 http://localhost:8180[localhost:8180] 访问你的Keycloak服务器。"

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:238
msgid "To access the Keycloak Administration Console, log in as the `admin` user by using the following login credentials:"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:240
msgid "Username: `admin`"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:241
msgid "Password: `admin`"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:243
#, fuzzy
msgid "Import the link:{quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[realm configuration file] from the upstream community repository to create a new realm."
msgstr "导入 {quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[领域配置文件] 来创建一个新领域(realm)。更多细节，请参阅Keycloak文档中关于如何 https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[创建一个新的领域] 。"

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:245
#, fuzzy
msgid "For more information, see the Keycloak documentation about link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[creating a new realm]."
msgstr "导入 {quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[领域配置文件] 来创建一个新领域(realm)。更多细节，请参阅Keycloak文档中关于如何 https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[创建一个新的领域] 。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:251
msgid "If you want to use the Keycloak Admin Client to configure your server from your application, you need to include either the `quarkus-keycloak-admin-client` or the `quarkus-keycloak-admin-client-reactive` (if the application uses `quarkus-rest-client-reactive`) extension.  For more information, see the link:{url-quarkusio-guides}security-keycloak-admin-client[Quarkus Keycloak Admin Client] guide."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:256
#, fuzzy, no-wrap
#| msgid "To run the application in a dev mode, use:"
msgid "Run the application in dev mode"
msgstr "要在开发模式下运行应用程序，请使用："

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:259
#, fuzzy
#| msgid "To run the application in a dev mode, use:"
msgid "To run the application in dev mode, run the following commands:"
msgstr "要在开发模式下运行应用程序，请使用："

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:264
#, fuzzy
#| msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] will launch a Keycloak container and import a `quarkus-realm.json`."
msgid "link:{quarkusio-guides}/security-openid-connect-dev-services[Dev Services for Keycloak] will start a Keycloak container and import a `quarkus-realm.json`."
msgstr "link:security-openid-connect-dev-services.html[Keycloak开发服务] 将启动一个Keycloak容器并导入一个 `quarkus-realm.json` 。"

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:265
#, fuzzy
msgid "Open a link:{url-quarkusio-guides}dev-ui[Dev UI], which you can find at http://localhost:8080/q/dev-ui[/q/dev-ui], then click a `Provider: Keycloak` link in an `OpenID Connect` `Dev UI` card."
msgstr "打开 link:http://localhost:8080/q/dev[/q/dev] 提供的 link:dev-ui.html[开发用户界面] ，点击 `OpenID Connect` `Dev UI` 卡片中的 `Provider: Keycloak` 链接。"

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:266
#, fuzzy
#| msgid "You will be asked to log in into a `Single Page Application` provided by `OpenID Connect Dev UI`:"
msgid "When prompted to log in to a `Single Page Application` provided by `OpenID Connect Dev UI`, do the following steps:"
msgstr "您将被要求登录到由 `OpenID Connect Dev UI` 提供的 `Single Page Application` ："

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:268
#, fuzzy
#| msgid "Login as `alice` (password: `alice`) who has a `user` role"
msgid "Log in as `alice` (password: `alice`), who has a `user` role."
msgstr "以 `alice` （密码： `alice` ）的身份登录，他的角色(role)是 `user`"

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:269
msgid "Accessing `/api/admin` returns `403`."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:270
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:273
msgid "Accessing `/api/users/me` returns `200`."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:271
#, fuzzy
#| msgid "Logout and login as `admin` (password: `admin`) who has both `admin` and `user` roles"
msgid "Log out and log in as `admin` (password: `admin`), who has both `admin` and `user` roles."
msgstr "退出并以 `admin` （密码： `admin` ）的身份登录，他同时拥有 `admin` 和 `user` 的角色(roles)"

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:272
msgid "Accessing `/api/admin` returns `200`."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:274
#, no-wrap
msgid "Run the Application in JVM mode"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:277
#, fuzzy
#| msgid "When you're done playing with the `dev` mode\" you can run it as a standard Java application."
msgid "When you are done with dev mode, you can run the application as a standard Java application."
msgstr "当您尝试完毕 `开发` 模式后，您可以把它作为一个标准的Java应用程序运行。"

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:279
msgid "Compile the application:"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:284
#, fuzzy
#| msgid "To run the application in a dev mode, use:"
msgid "Run the application:"
msgstr "要在开发模式下运行应用程序，请使用："

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:289
#, no-wrap
msgid "java -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:292
#, fuzzy, no-wrap
#| msgid "To run the application in a dev mode, use:"
msgid "Run the application in native mode"
msgstr "要在开发模式下运行应用程序，请使用："

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:297
#, fuzzy
#| msgid "This implies that you no longer need to install a JVM on your production environment, as the runtime technology is included in the produced binary, and optimized to run with minimal resource overhead."
msgid "You can compile this same demo as-is into native mode without needing any modifications.  This implies that you no longer need to install a JVM on your production environment.  The runtime technology is included in the produced binary and optimized to run with minimal resources required."
msgstr "这意味着您不再需要在您的生产环境中安装JVM，因为运行时技术包含在生产的二进制文件中，并以最小的资源开销优化运行。"

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:299
#, fuzzy
#| msgid "Compilation will take a bit longer, so this step is disabled by default; let's build again by enabling the `native` profile:"
msgid "Compilation takes a bit longer, so this step is disabled by default."
msgstr "编译会花一点时间，所以这一步默认是禁用的；让我们通过启用 `native` profile来再次构建："

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:301
msgid "Build your application again by enabling the `native` profile:"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:307
#, fuzzy
#| msgid "After getting a cup of coffee, you'll be able to run this binary directly:"
msgid "After waiting a little while, you run the following binary directly:"
msgstr "一杯咖啡的时间后，您就可以直接运行该二进制文件了："

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:312
#, no-wrap
msgid "./target/security-openid-connect-quickstart-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:315
#, no-wrap
msgid "Test the application"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:318
msgid "For information about testing your application in dev mode, see the preceding xref:keycloak-dev-mode[Run the application in dev mode] section."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:320
msgid "You can test the application launched in JVM or Native modes with `curl`."
msgstr "您可以用 `curl` 测试在JVM或Native模式下启动的应用程序。"

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:322
msgid "Because the application uses Bearer token authentication, you first need to obtain an access token from the Keycloak server to access the application resources:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:332
#, no-wrap
msgid ""
"export access_token=$(\\\n"
"    curl --insecure -X POST http://localhost:8180/realms/quarkus/protocol/openid-connect/token \\\n"
"    --user backend-service:secret \\\n"
"    -H 'content-type: application/x-www-form-urlencoded' \\\n"
"    -d 'username=alice&password=alice&grant_type=password' | jq --raw-output '.access_token' \\\n"
" )\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:336
#, fuzzy
#| msgid "The example above obtains an access token for user `alice`."
msgid "The preceding example obtains an access token for the user `alice`."
msgstr "上面的命令为用户 `alice` 获取了一个访问token。"

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:338
#, fuzzy
msgid "Any user can access the `http://localhost:8080/api/users/me` endpoint, which returns a JSON payload with details about the user."
msgstr "任何用户都被允许访问 `<a href=\"http://localhost:8080/api/users/me\" class=\"bare\">http://localhost:8080/api/users/me</a>` 节点，该节点会返回一个包含用户详细信息的JSON payload。"

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:344
#, no-wrap
msgid ""
"curl -v -X GET \\\n"
"  http://localhost:8080/api/users/me \\\n"
"  -H \"Authorization: Bearer \"$access_token\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:348
#, fuzzy
msgid "Only users with the `admin` role can access the `http://localhost:8080/api/admin` endpoint.  If you try to access this endpoint with the previously-issued access token, you get a `403` response from the server."
msgstr "该 `http://localhost:8080/api/admin` 端点只能由具有 `admin` 角色的用户访问。如果你试图用先前发布的访问令牌访问这个端点，你应该会从服务器上得到一个 `403` 的响应。\n"

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:354
#, no-wrap
msgid ""
"curl -v -X GET \\\n"
"   http://localhost:8080/api/admin \\\n"
"   -H \"Authorization: Bearer \"$access_token\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:357
#, fuzzy
msgid "To access the admin endpoint, obtain a token for the `admin` user:"
msgstr "为了访问管理节点，您需要获得一个 `admin` 用户的token："

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:366
#, no-wrap
msgid ""
"export access_token=$(\\\n"
"    curl --insecure -X POST http://localhost:8180/realms/quarkus/protocol/openid-connect/token \\\n"
"    --user backend-service:secret \\\n"
"    -H 'content-type: application/x-www-form-urlencoded' \\\n"
"    -d 'username=admin&password=admin&grant_type=password' | jq --raw-output '.access_token' \\\n"
" )\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:369
msgid "For information about writing integration tests that depend on `Dev Services for Keycloak`, see the xref:security-oidc-bearer-token-authentication.adoc#integration-testing-keycloak-devservices[Dev Services for Keycloak] section of the \"OpenID Connect (OIDC) Bearer token authentication\" guide."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:372
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:375
msgid "xref:security-oidc-configuration-properties-reference.adoc[OIDC configuration properties]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:376
msgid "xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) Bearer token authentication]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:377
msgid "link:https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:378
msgid "link:https://openid.net/connect/[OpenID Connect]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:379
msgid "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:380
msgid "xref:security-openid-connect-client-reference.adoc[OpenID Connect and OAuth2 Client and Filters Reference Guide]"
msgstr "link:security-openid-connect-client.html[Quarkus - 使用OpenID Connect，OAuth2客户端和过滤器的参考指南]"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:381
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:382
msgid "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:383
msgid "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[Combining authentication mechanisms]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:384
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:384
msgid "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client]"
msgstr ""

#~ msgid "pom.xml"
#~ msgstr "pom.xml"

#~ msgid "Log in as the `admin` user to access the Keycloak Administration Console. Username should be `admin` and password `admin`."
#~ msgstr "以 `admin` 用户身份登录，访问Keycloak管理控制台。用户名应该是 `admin` ，密码是 `admin` 。"

#~ msgid "First compile it:"
#~ msgstr "首先编译它："

#~ msgid "Then run it:"
#~ msgstr "然后运行："

#~ msgid "This same demo can be compiled into native code: no modifications required."
#~ msgstr "这个同样的演示可以被编译成本地代码：不需要任何修改。"

#, fuzzy
#~ msgid "See the xref:keycloak-dev-mode[Running the Application in Dev mode] section above about testing your application in a dev mode."
#~ msgstr "关于在开发模式下测试您的应用程序，请参见上面 link:#keycloak-dev-mode[在开发模式下运行应用程序] 一节。"
