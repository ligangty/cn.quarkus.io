# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-11-29 02:24+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "OpenID Connect client and token propagation quickstart"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Learn how to use OpenID Connect (OIDC) and OAuth2 clients with filters to get, refresh, and propagate access tokens in your applications."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "This approach uses an OIDC token propagation Reactive filter to propagate the incoming bearer access tokens."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "For more information about `Oidc Client` and `Token Propagation` support in Quarkus, see the xref:security-openid-connect-client-reference.adoc[OpenID Connect (OIDC) and OAuth2 client and filters reference guide."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "To protect your applications by using Bearer Token Authorization, see the xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) Bearer token authentication] guide."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "https://stedolan.github.io/jq/[jq tool]"
msgstr "link:https://stedolan.github.io/jq/[jq工具]"

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Architecture"
msgstr "架构"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"In this example, an application is built with two Jakarta REST resources, `FrontendResource` and `ProtectedResource`.\n"
"Here, `FrontendResource` uses one of two methods to propagate access tokens to `ProtectedResource`:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "It can get a token by using an OIDC token propagation Reactive filter before propagating it."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "It can use an OIDC token propagation Reactive filter to propagate the incoming access token."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`FrontendResource` has four endpoints:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
#, fuzzy
msgid "`/frontend/user-name-with-oidc-client-token`"
msgstr " `/frontend/user-name-with-oidc-client` "

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
#, fuzzy
msgid "`/frontend/admin-name-with-oidc-client-token`"
msgstr " `/frontend/admin-name-with-oidc-client` "

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
#, fuzzy
msgid "`/frontend/user-name-with-propagated-token`"
msgstr " `/frontend/user-name-with-propagated-token` "

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
#, fuzzy
msgid "`/frontend/admin-name-with-propagated-token`"
msgstr " `/frontend/admin-name-with-propagated-token` "

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"`FrontendResource` uses a REST Client with an OIDC token propagation Reactive filter to get and propagate an access token to `ProtectedResource` when either `/frontend/user-name-with-oidc-client-token` or `/frontend/admin-name-with-oidc-client-token` is called.\n"
"Also, `FrontendResource` uses a REST Client with `OpenID Connect Token Propagation Reactive Filter` to propagate the current incoming access token to `ProtectedResource` when either `/frontend/user-name-with-propagated-token` or `/frontend/admin-name-with-propagated-token` is called."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`ProtectedResource` has two endpoints:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
#, fuzzy
msgid "`/protected/user-name`"
msgstr " `/protected/user-name` "

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
#, fuzzy
msgid "`/protected/admin-name`"
msgstr " `/protected/admin-name` "

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Both endpoints return the username extracted from the incoming access token, which was propagated to `ProtectedResource` from `FrontendResource`.\n"
"The only difference between these endpoints is that calling `/protected/user-name` is only allowed if the current access token has a `user` role, and calling `/protected/admin-name` is only allowed if the current access token has an `admin` role."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "The solution is in the `security-openid-connect-client-quickstart` link:{quickstarts-tree-url}/security-openid-connect-client-quickstart[directory]."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"First, you need a new project.\n"
"Create a new project with the following command:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "This command generates a Maven project, importing the `oidc`, `oidc-client-reactive-filter`, `oidc-token-propagation-reactive-filter`, and `resteasy-reactive` extensions."
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add these extensions to your project by running the following command in your project base directory:"
msgstr "如果你已经配置了你的Quarkus项目，你可以通过在你的项目基本目录下运行以下命令将这些扩展添加到你的项目中。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "This command adds the following extensions to your build file:"
msgstr ""

#. type: Block title
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Writing the application"
msgstr "编写应用程序"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Start by implementing `ProtectedResource`:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"`ProtectedResource` returns a name from both `userName()` and `adminName()` methods.\n"
"The name is extracted from the current `JsonWebToken`."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Next, add two REST clients, `OidcClientRequestReactiveFilter` and `AccessTokenRequestReactiveFilter`, which `FrontendResource` uses to call `ProtectedResource`."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Add the `OidcClientRequestReactiveFilter` REST Client:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "The `RestClientWithOidcClientFilter` interface depends on `OidcClientRequestReactiveFilter` to get and propagate the tokens."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Add the `AccessTokenRequestReactiveFilter` REST Client:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "The `RestClientWithTokenPropagationFilter` interface depends on `AccessTokenRequestReactiveFilter` to propagate the incoming already-existing tokens."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Note that both `RestClientWithOidcClientFilter` and `RestClientWithTokenPropagationFilter` interfaces are the same.\n"
"This is because combining `OidcClientRequestReactiveFilter` and `AccessTokenRequestReactiveFilter` on the same REST Client causes side effects because both filters can interfere with each other.\n"
"For example, `OidcClientRequestReactiveFilter` can override the token propagated by `AccessTokenRequestReactiveFilter`, or `AccessTokenRequestReactiveFilter` can fail if it is called when no token is available to propagate and `OidcClientRequestReactiveFilter` is expected to get a new token instead."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Now, finish creating the application by adding `FrontendResource`:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"`FrontendResource` uses REST Client with an OIDC token propagation Reactive filter to get and propagate an access token to `ProtectedResource` when either `/frontend/user-name-with-oidc-client-token` or `/frontend/admin-name-with-oidc-client-token` is called.\n"
"Also, `FrontendResource` uses REST Client with `OpenID Connect Token Propagation Reactive Filter` to propagate the current incoming access token to `ProtectedResource` when either `/frontend/user-name-with-propagated-token` or `/frontend/admin-name-with-propagated-token` is called."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Finally, add a Jakarta REST `ExceptionMapper`:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"This exception mapper is only added to verify during the tests that `ProtectedResource` returns `403` when the token has no expected role.\n"
"Without this mapper, `RESTEasy Reactive` would correctly convert the exceptions that escape from REST Client calls to `500` to avoid leaking the information from the downstream resources such as `ProtectedResource`.\n"
"However, in the tests, it would not be possible to assert that `500` is caused by an authorization exception instead of some internal error."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Configuring the application"
msgstr "配置该应用程序"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Having prepared the code, you configure the application:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"This configuration references Keycloak, which is used by `ProtectedResource` to verify the incoming access tokens and by `OidcClient` to get the tokens for a user `alice` by using a `password` grant.\n"
"Both REST clients point to `ProtectedResource`'s HTTP address."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Adding a `%prod.` profile prefix to `quarkus.oidc.auth-server-url` ensures that `Dev Services for Keycloak` launches a container for you when the application is run in dev or test modes.\n"
"For more information, see the xref:keycloak-dev-mode[Running the application in dev mode] section."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Starting and configuring the Keycloak server"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Do not start the Keycloak server when you run the application in dev or test modes; `Dev Services for Keycloak` launches a container.\n"
"For more information, see the xref:keycloak-dev-mode[Running the application in dev mode] section.\n"
"Ensure you put the link:{quickstarts-tree-url}/security-openid-connect-client-quickstart/config/quarkus-realm.json[realm configuration file] on the classpath, in the `target/classes` directory.\n"
"This placement ensures that the file is automatically imported in dev mode.\n"
"However, if you have already built a link:{quickstarts-tree-url}/security-openid-connect-quickstart[complete solution], you do not need to add the realm file to the classpath because the build process has already done so."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "To start a Keycloak Server, you can use Docker and just run the following command:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Set `{keycloak.version}` to `23.0.0` or later."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "You can access your Keycloak Server at http://localhost:8180[localhost:8180]."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Log in as the `admin` user to access the Keycloak Administration Console.\n"
"The password is `admin`."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Import the link:{quickstarts-tree-url}/security-openid-connect-client-quickstart/config/quarkus-realm.json[realm configuration file] to create a new realm.\n"
"For more details, see the Keycloak documentation about how to https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[create a new realm]."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"This `quarkus` realm file adds a `frontend` client, and `alice` and `admin` users.\n"
"`alice` has a `user` role.\n"
"`admin` has both `user` and `admin` roles."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Running the application in dev mode"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "To run the application in a dev mode, use:"
msgstr "要在开发模式下运行应用程序，请使用："

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] launches a Keycloak container and imports `quarkus-realm.json`."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Open a xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev-ui[/q/dev-ui] and click a `Provider: Keycloak` link in the *OpenID Connect Dev UI* card."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "When asked, log in to a `Single Page Application` provided by the OpenID Connect Dev UI:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Log in as `alice`, with the password, `alice`.\n"
"This user has a `user` role."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Access `/frontend/user-name-with-propagated-token`, which returns `200`."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Access `/frontend/admin-name-with-propagated-token`, which returns `403`."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Log out and back in as `admin` with the password, `admin`.\n"
"This user has both `admin` and `user` roles."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Access `/frontend/admin-name-with-propagated-token`, which returns `200`."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "In this case, you are testing that `FrontendResource` can propagate the access tokens from the OpenID Connect Dev UI."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Running the application in JVM mode"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "After exploring the application in dev mode, you can run it as a standard Java application."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "First, compile it:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Then, run it:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Running the application in native mode"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "You can compile this demo into native code; no modifications are required."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"This implies that you no longer need to install a JVM on your\n"
"production environment, as the runtime technology is included in\n"
"the produced binary and optimized to run with minimal resources."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Compilation takes longer, so this step is turned off by default.\n"
"To build again, enable the `native` profile:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "After a little while, when the build finishes, you can run the native binary directly:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Testing the application"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "For more information about testing your application in dev mode, see the preceding xref:keycloak-dev-mode[Running the application in dev mode] section."
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "You can test the application launched in JVM or Native modes with `curl`."
msgstr "您可以用 `curl` 测试在JVM或Native模式下启动的应用程序。"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
#, fuzzy
msgid "Obtain an access token for `alice`:"
msgstr "获得一个访问令牌， `alice` 。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Now, use this token to call `/frontend/user-name-with-propagated-token` and `/frontend/admin-name-with-propagated-token`:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "This command returns the `200` status code and the name `alice`."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"In contrast, this command returns `403`.\n"
"Recall that `alice` only has a `user` role."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Next, obtain an access token for `admin`:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Use this token to call `/frontend/user-name-with-propagated-token`:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "This command returns a `200` status code and the name `admin`."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Now, use this token to call `/frontend/admin-name-with-propagated-token`:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "This command also returns the `200` status code and the name `admin` because `admin` has both `user` and `admin` roles."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Now, check the `FrontendResource` methods, which do not propagate the existing tokens but use `OidcClient` to get and propagate the tokens.\n"
"As already shown, `OidcClient` is configured to get the tokens for the `alice` user, so:"
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid "In contrast with the preceding command, this command returns a `403` status code."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
#, fuzzy
msgid "xref:security-openid-connect-client-reference.adoc[OpenID Connect Client and Token Propagation Reference Guide]"
msgstr "xref:security-openid-connect-client-reference.adoc[OpenID Connect 客户端和令牌传播参考指南]"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
#, fuzzy
msgid "xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication]"
msgstr "xref:security-oidc-bearer-token-authentication.adoc[OIDC 承载令牌验证]"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus 安全概述]"
