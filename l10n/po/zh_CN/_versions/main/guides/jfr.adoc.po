msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Using JDK Flight Recorder"
msgstr "使用 JDK 飞行记录器"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"This guide explains how https://openjdk.org/jeps/328[JDK Flight Recorder] (JFR) can be extended to provide insight into your Quarkus application.\n"
"insight into itself.\n"
"JFR records various information from the Java standard API and JVM as events.\n"
"By adding this extension, you can add custom Quarkus events to JFR. This will help you solve problems in your application."
msgstr "本指南将解释如何扩展 link:https://openjdk.org/jeps/328[JDK Flight Recorder] (JFR)，以便深入了解您的 Quarkus 应用程序。JFR 以事件的形式记录来自 Java 标准 API 和 JVM 的各种信息。通过添加此扩展，您可以在 JFR 中添加自定义的 Quarkus 事件。这将帮助您解决应用程序中的问题。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"JFR can be preconfigured to dump a file, and when the application exits, JFR will output the file.\n"
"The file will contain the contents of the JFR event stream to which Quarkus custom events have also been added.\n"
"You can, of course, get this file at any time you want, even if your application exits unexpectedly."
msgstr "JFR 可预先配置为转储文件，当应用程序退出时，JFR 将输出该文件。该文件将包含 JFR 事件流的内容，其中还添加了 Quarkus 自定义事件。当然，您可以随时获取该文件，即使应用程序意外退出也是如此。"

#: _versions/main/guides/jfr.adoc
msgid "Prerequisites"
msgstr "先决条件"

#: _versions/main/guides/jfr.adoc
msgid "Architecture"
msgstr "架构"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "In this guide, we create a straightforward REST application to demonstrate JFR."
msgstr "在本指南中，我们将创建一个简单的 REST 应用程序来演示 JFR。"

#: _versions/main/guides/jfr.adoc
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#: _versions/main/guides/jfr.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新项目:"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"This command generates the Maven project and imports the `quarkus-jfr` extension,\n"
"which includes the default JFR support."
msgstr "该命令生成 Maven 项目并导入 `quarkus-jfr` 扩展，其中包括默认的 JFR 支持。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"If you already have your Quarkus project configured, you can add the `quarkus-jfr` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "如果已经配置了 Quarkus 项目，可以在项目基本目录下运行以下命令，将 `quarkus-jfr` 扩展添加到项目中："

#: _versions/main/guides/jfr.adoc
msgid "This will add the following to your build file:"
msgstr "这会将以下内容添加到你的构建文件中:"

#: _versions/main/guides/jfr.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/main/guides/jfr.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Examine the Jakarta REST resource"
msgstr "检查 Jakarta REST 资源"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Create a `src/main/java/org/acme/jfr/JfrResource.java` file with the following content:"
msgstr "创建 `src/main/java/org/acme/jfr/JfrResource.java` 文件，内容如下："

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"Notice that there is no JFR specific code included in the application. By default, requests sent to this\n"
"endpoint will be recorded into JFR without any required code changes."
msgstr "请注意，应用程序中不包含 JFR 特定代码。默认情况下，发送到此端点的请求将被记录到 JFR 中，无需更改任何代码。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Running Quarkus applications and JFR"
msgstr "运行 Quarkus 应用程序和 JFR"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"Now we are ready to run our application.\n"
"We can launch the application with JFR configured to be enabled from the startup of the Java Virtual Machine."
msgstr "现在，我们可以运行应用程序了。我们可以在启动 Java 虚拟机时，通过配置启用 JFR 来启动应用程序。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "With the JDK Flight Recorder and the application running, we can make a request to the provided endpoint:"
msgstr "运行 JDK Flight Recorder 和应用程序后，我们就可以向提供的端点发出请求："

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "This is all that was needed to write the information to the JFR."
msgstr "这就是将信息写入 JFR 所需要的全部内容。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Save the JFR to a file"
msgstr "将 JFR 保存到文件中"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"As mentioned above,　the Quarkus application was configured to also start JFR at startup and dump it to a `myrecording.jfr` when it terminates.\n"
"So we can get the file when we hit `CTRL+C` or type `q` to stop the application."
msgstr "如上所述，Quarkus 应用程序被配置为在启动时也启动 JFR，并在终止时将其转储到 `myrecording.jfr` 。因此，当我们点击 `CTRL+C` 或键入 `q` 停止应用程序时，就能获取文件。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Or, we can also dump with the jcmd command."
msgstr "或者，我们也可以使用 jcmd 命令进行转储。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "jcmd <PID> JFR.dump name=quarkus filename=myrecording.jfr"
msgstr "jcmd <PID> JFR.dump name=quarkus filename=myrecording.jfr"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Running jcmd command give us a list of running Java processes and the PID of each process."
msgstr "运行 jcmd 命令后，我们会看到正在运行的 Java 进程列表以及每个进程的 PID。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Open JFR dump file"
msgstr "打开 JFR 转储文件"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"We can open a JFR dump using two tools: Jfr CLI and JDK Mission Control (JMC).\n"
"It is also possible to read them using JFR APIs, but we won't go into that here."
msgstr "我们可以使用两种工具打开 JFR 转储：Jfr CLI 和 JDK Mission Control (JMC)。我们还可以使用 JFR API 来读取它们，但在此就不赘述了。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "jfr CLI"
msgstr "jfr CLI"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"The jfr CLI is a tool included in OpenJDK. The executable file is `$JAVA_HOME/bin/jfr`.\n"
"We can use the jfr CLI to see a list of events limited to those related to Quarkus in the dump file by doing the following."
msgstr "jfr CLI 是 OpenJDK 中的一个工具。可执行文件是 `$JAVA_HOME/bin/jfr` 。我们可以使用 jfr CLI 查看转储文件中的事件列表，但仅限于与 Quarkus 相关的事件，具体方法如下。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "jfr print --categories quarkus myrecording.jfr"
msgstr "jfr print --categories quarkus myrecording.jfr"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "JDK Mission Control"
msgstr "JDK 任务控制"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"JMC is essentially a GUI viewer for JFR.\n"
"Some distributions include JMC in OpenJDK binary, but if not, we need to download it manually.\n"
"To see a list of events using the JMC, first we load the JFR file in the JMC as follows."
msgstr "JMC 本质上是 JFR 的图形用户界面查看器。有些发行版在 OpenJDK 二进制文件中包含了 JMC，但如果没有，我们就需要手动下载。要使用 JMC 查看事件列表，首先要在 JMC 中加载 JFR 文件，如下所示。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "jmc -open myrecording.jfr"
msgstr "jmc -open myrecording.jfr"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"After opening the JFR file, we have two options.\n"
"One is to view the events as a tabular list, and the other is to view the events on the threads in which they occurred, in chronological order."
msgstr "打开 JFR 文件后，我们有两个选项。一个是以表格形式查看事件，另一个是按时间顺序查看事件发生的线程。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "To view Quarkus events in tabular style, select the Event Browser on the left side of the JMC, then open the Quarkus event type tree on the right side of the JMC."
msgstr "要以表格样式查看 Quarkus 事件，请选择 JMC 左侧的 \"事件浏览器\"，然后打开 JMC 右侧的 Quarkus 事件类型树。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "To see Quarkus events in chronological order on a thread, select the `Java application` and `Threads` on the left side of the JMC."
msgstr "要按时间顺序查看主题中的 Quarkus 事件，请选择 `Java application` ，并在 JMC 左侧选择 `Threads` 。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"The standard configuration does not show Quarkus events.\n"
"We have to do three tasks to see the Quarkus events."
msgstr "标准配置不显示 Quarkus 事件。我们必须完成三项任务才能看到 Quarkus 事件。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Right-click and select `Edit Thread Activity Lanes...`."
msgstr "右键单击并选择 `Edit Thread Activity Lanes…​` 。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Select the plus button to add a new lane on the left side, then check to display that lane."
msgstr "选择加号按钮在左侧添加新车道，然后选中以显示该车道。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Select Quarkus as the event type that lane will display and press OK."
msgstr "选择 Quarkus 作为车道将显示的事件类型，然后按确定。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Now we can see the Quarkus events per thread."
msgstr "现在我们可以看到每个线程中的 Quarkus 事件。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"Non-blocking is where multiple processes are processed apparently simultaneously in a single thread.\n"
"Therefore, this extension records multiple JFR events concurrently, and a number of events might overlap on the JMC.\n"
"This could make it difficult for you to see the events you want to see.\n"
"To avoid this, we recommend to use xref:#identifying-requests[Request ID] to filter events so that you only see the information about the requests you want to see."
msgstr "非阻塞是指在一个线程中明显同时处理多个进程。因此，此扩展会同时记录多个 JFR 事件，而 JMC 上的一些事件可能会重叠。这可能会使您很难看到您想看到的事件。为避免出现这种情况，我们建议使用 xref:identifying-requests[请求 ID] 过滤事件，这样您只能看到想看的请求信息。"

#: _versions/main/guides/jfr.adoc
msgid "Events"
msgstr "活动"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Identifying Requests"
msgstr "识别请求"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"This extension works with the OpenTelemetry extension.\n"
"The events recorded by this extension have a trace ID and a span ID. These are recorded with the OpenTelemetry IDs respectively."
msgstr "该扩展与 OpenTelemetry 扩展协同工作。该扩展记录的事件有一个跟踪 ID 和一个跨度 ID。它们分别与 OpenTelemetry ID 一起记录。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "This means that after we identify the trace and span IDs of interest from the UI provided by the OpenTelemetry implementation, we can immediately jump to the details in JFR using those IDs."
msgstr "这意味着，当我们从 OpenTelemetry 实现提供的用户界面中识别出感兴趣的跟踪和跨度 ID 后，就可以立即使用这些 ID 跳转到 JFR 中的详细信息。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"If we have not enabled the OpenTelemetry extension, this extension creates an ID for each request and links it to JFR events as a traceId.\n"
"In this case, the span ID will be null."
msgstr "如果我们没有启用 OpenTelemetry 扩展，该扩展会为每个请求创建一个 ID，并将其作为 traceId 链接到 JFR 事件。在这种情况下，span ID 将为空。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "For now, Quarkus only has REST events, but we plan to use this ID to link each event to each other as we add more events in the future."
msgstr "目前，Quarkus 只有 REST 事件，但我们计划在将来添加更多事件时，使用此 ID 将每个事件相互链接起来。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Event Implementation Policy"
msgstr "活动实施政策"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"When JFR starts recording an event, the event does not record to JFR yet, but when it commits that event, the event is recorded.\n"
"Therefore, events that have started recording at dump time but have not yet been committed are not dumped.\n"
"This is unavoidable due to the design of JFR.\n"
"This means that events are not recorded forever if there are prolonged processing.\n"
"Therefore, you will not be aware of prolonged processing."
msgstr "当 JFR 开始记录一个事件时，该事件尚未记录到 JFR 中，但当它提交该事件时，该事件就被记录下来了。因此，在转储时已开始记录但尚未提交的事件不会被转储。由于 JFR 的设计，这种情况不可避免。这意味着如果处理时间过长，事件不会被永久记录。因此，您不会察觉到处理时间的延长。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"To solve this problem, Quarkus can also record start and end events at the beginning and end of processing.\n"
"These events are disabled by default.\n"
"However, we can enable these events on JFR.(described below)"
msgstr "为了解决这个问题，Quarkus 还可以在处理开始和结束时记录开始和结束事件。这些事件默认是禁用的。不过，我们可以在 JFR 上启用这些事件（如下所述）"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "REST API Event"
msgstr "REST API 事件"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"This event is recorded when either `quarkus-rest` or `resteasy-classic` extension is enabled.\n"
"The following three JFR events are recorded as soon as REST server processing is complete."
msgstr "启用 `quarkus-rest` 或 `resteasy-classic` 扩展时都会记录此事件。REST 服务器处理完成后，会立即记录以下三个 JFR 事件。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "REST"
msgstr "REST"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "REST Start"
msgstr "REST 启动"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "REST End"
msgstr "REST 结束"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "REST Event records the time period from the start of the REST process to the end of the REST server process."
msgstr "REST 事件记录了从 REST 进程开始到 REST 服务器进程结束的时间段。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "REST Start Event records the start of the REST server process."
msgstr "REST 启动事件记录 REST 服务器进程的启动。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "REST End Event records the end of the REST server process."
msgstr "REST 结束事件记录 REST 服务器进程的结束。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "These events have the following information."
msgstr "这些事件的信息如下"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "HTTP Method"
msgstr "HTTP 方法"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "URI"
msgstr "通用资源识别号"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Resource Class"
msgstr "资源类别"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Resource Method"
msgstr "资源方法"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Client"
msgstr "客户"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"HTTP Method records the HTTP Method accessed by the client.\n"
"This will record a string of HTTP methods such as GET, POST, DELETE, and other general HTTP methods."
msgstr "HTTP 方法记录客户端访问的 HTTP 方法。这将记录一串 HTTP 方法，如 GET、POST、DELETE 和其他一般 HTTP 方法。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"URI records the URI path accessed by the client.\n"
"This does not include host names or port numbers."
msgstr "URI 记录客户端访问的 URI 路径。这不包括主机名或端口号。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"Resource Class records the class that was executed.\n"
"We can check whether the Resource Class was executed as expected by the HTTP Method and URI."
msgstr "资源类记录了被执行的类。我们可以通过 HTTP 方法和 URI 检查资源类是否按预期执行。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"Resource Method records the method that was executed.\n"
"We can check if the Resource Method was executed as expected by the HTTP Method and URI."
msgstr "资源方法记录了执行的方法。我们可以通过 HTTP 方法和 URI 检查资源方法是否按预期执行。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Client records information about the accessing client."
msgstr "客户记录访问客户的信息。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Native Image"
msgstr "原生图像"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"Native image supports JDK Flight Recorder.\n"
"This extension also supports native images.\n"
"To enable JFR on Native image, it is usually built with `--enable-monitoring`.\n"
"However, we can enable JFR in Quarkus Native images by adding `jfr` to the configuration `quarkus.native.monitoring`.\n"
"There are two ways to set up this configuration: by including it in `application.properties` or by specifying it at build time."
msgstr "本机图像支持 JDK Flight Recorder。该扩展也支持原生映像。要在原生映像上启用 JFR，通常需要使用 `--enable-monitoring` 。不过，我们可以通过在配置 `quarkus.native.monitoring` 中添加 `jfr` 来在 Quarkus 原生映像中启用 JFR。设置该配置有两种方法：将其包含在 `application.properties` 中或在构建时指定。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "The first method is to first configure settings in `application.properties`."
msgstr "第一种方法是首先在 `application.properties` 中配置设置。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "application.properties"
msgstr "应用程序属性"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Next, simply build as `./mvnw package -Dnative`."
msgstr "接下来，只需以 `./mvnw package -Dnative` ."

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "The second way is to give `-Dquarkus.native.monitoring=jfr` at build time and build as `./mvnw package -Dnative -Dquarkus.native.monitoring=jfr`."
msgstr "第二种方法是在构建时给出 `-Dquarkus.native.monitoring=jfr` ，并以 `./mvnw package -Dnative -Dquarkus.native.monitoring=jfr` 的形式构建。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Once we have finished building the Native image, we can run the native application with JFR as follows"
msgstr "完成本地映像的构建后，我们就可以使用 JFR 运行本地应用程序了，如下所示"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Note that at this time, GraalVM is not possible to record JFR on Windows native images."
msgstr "请注意，目前 GraalVM 无法在 Windows 原生镜像上记录 JFR。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "JFR configuration"
msgstr "JFR 配置"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"We can use the JFR CLI to configure the events that JFR will record.\n"
"The configuration file, JFC file, is in XML format, so we can modify with a text editor.\n"
"However, we should use `jfr configure`, which is included in OpenJDK by default."
msgstr "我们可以使用 JFR CLI 配置 JFR 将记录的事件。配置文件（JFC 文件）是 XML 格式的，因此我们可以使用文本编辑器进行修改。不过，我们应该使用 `jfr configure` ，它默认包含在 OpenJDK 中。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Here we create a configuration file in which RestStart and RestEnd events are recorded, which are not recorded by default."
msgstr "在这里，我们创建了一个记录 RestStart 和 RestEnd 事件的配置文件，默认情况下不记录这些事件。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "jfr configure --input default.jfc +quarkus.RestStart#enabled=true +quarkus.RestEnd#enabled=true --output custom-rest.jfc"
msgstr "jfr configure --input default.jfc +quarkus.RestStart#enabled=true +quarkus.RestEnd#enabled=true --output custom-rest.jfc"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "This creates `custom-rest.jfc` as a configuration file with RestStart and RestEnd enabled."
msgstr "这将创建 `custom-rest.jfc` 作为配置文件，并启用 RestStart 和 RestEnd。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Now we are ready to run our application with new settings. We launch the application with JFR configured to be enabled from the startup of the Java Virtual Machine."
msgstr "现在，我们可以使用新设置运行应用程序了。我们在启动应用程序时，将 JFR 配置为从 Java 虚拟机启动时启用。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Developing new events into quarkus-jfr extension."
msgstr "在 quarkus-jfr 扩展中开发新事件。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "This section is for those who would like to add new events with this extension."
msgstr "本部分适用于希望使用此扩展添加新事件的用户。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"We recommend that new events be associated with existing events.\n"
"Associations are useful when looking at the details of a process that is taking a long time.\n"
"For example, a general REST application retrieves the data needed for processing from a data store.\n"
"If REST events are not associated with datastore events, it is impossible to know which datastore events were processed in each REST request.\n"
"When the two events are associated, we know immediately which datastore event was processed in each REST request."
msgstr "我们建议将新事件与现有事件关联起来。在查看耗时较长的流程细节时，关联非常有用。例如，一般的 REST 应用程序会从数据存储区检索处理所需的数据。如果不将 REST 事件与数据存储事件关联起来，就无法知道每个 REST 请求中处理了哪些数据存储事件。如果将两个事件关联起来，我们就能立即知道每个 REST 请求中处理了哪个数据存储事件。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Data store events are not implemented yet."
msgstr "数据存储事件尚未实施。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"The quarkus-jfr extension provides a Request ID for event association.\n"
"See Identifying Requests for more information on Request IDs."
msgstr "quarkus-jfr 扩展为事件关联提供了一个请求 ID。有关请求 ID 的更多信息，请参阅识别请求。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid ""
"In specific code, the following two steps are required.\n"
"First, implement `traceId` and `spanId` on the new event as follows\n"
"The `@TraceIdRelational` and `@SpanIdRelational` attached to these events will provide the association."
msgstr "在具体代码中，需要以下两个步骤。首先，在新事件上实现 `traceId` 和 `spanId` ，如下所示 附在这些事件上的 `@TraceIdRelational` 和 `@SpanIdRelational` 将提供关联。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "Then you get the information to store in them from the `IdProducer` object's `getTraceId()` and `getSpanId()`."
msgstr "然后，从 `IdProducer` 对象的 `getTraceId()` 和 `getSpanId()` 中获取要存储的信息。"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "quarkus-jfr Configuration Reference"
msgstr "quarkus-jfr 配置参考"

#: _versions/main/guides/jfr.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
