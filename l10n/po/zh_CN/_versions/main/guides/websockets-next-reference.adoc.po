msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "WebSockets-Next extension reference guide"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The `websockets-next` extension is experimental. The proposal API may change in future releases."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The WebSocket protocol"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"The _WebSocket_ protocol, documented in the https://datatracker.ietf.org/doc/html/rfc6455[RFC6455], establishes a standardized method for creating a bidirectional communication channel between a client and a server through a single TCP connection.\n"
"Unlike HTTP, WebSocket operates as a distinct TCP protocol but is designed to function seamlessly alongside HTTP.\n"
"For example, it reuses the same ports and is compatible with the same security mechanisms."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"The interaction using WebSocket initiates with an HTTP request employing the 'Upgrade' header to transition to the WebSocket protocol.\n"
"Instead of a `200 OK` response, the server replies with a `101 Switching Protocols` response to upgrade the HTTP connection to a WebSocket connection.\n"
"Following this successful handshake, the TCP socket utilized in the initial HTTP upgrade request remains open, allowing both client and server to exchange messages in both direction continually."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "HTTP and WebSocket architecture styles"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Despite WebSocket's compatibility with HTTP and its initiation through an HTTP request, it's crucial to recognize that the two protocols lead to distinctly different architectures and programming models."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"With HTTP/REST, applications are structured around resources/endpoints that handle various HTTP methods and paths.\n"
"Client interaction occurs through emitting HTTP requests with appropriate methods and paths, following a request-response pattern.\n"
"The server routes incoming requests to corresponding handlers based on path, method, and headers and then replies with a well-defined response."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Conversely, WebSocket typically involves a single endpoint for the initial HTTP connection, after which all messages utilize the same TCP connection.\n"
"It introduces an entirely different interaction model: asynchronous and message-driven."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"WebSocket is a low-level transport protocol, in contrast to HTTP.\n"
"Message formats, routing, or processing require prior agreement between the client and server regarding message semantics."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "For WebSocket clients and servers, the `Sec-WebSocket-Protocol` header in the HTTP handshake request allows negotiation of a higher-level messaging protocol. In its absence, the server and client must establish their own conventions."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Quarkus WebSockets vs. Quarkus WebSockets Next"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"This guide utilizes the `quarkus-websockets-next` extension, an implementation of the WebSocket API boasting enhanced efficiency and usability compared to the legacy `quarkus-websockets` extension.\n"
"The original `quarkus-websockets` extension remains accessible, will receive ongoing support, but it's unlikely to receive to feature development."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Unlike `quarkus-websockets`, the `quarkus-websockets-next` extension does **not** implement the Jakarta WebSocket specification.\n"
"Instead, it introduces a modern API, prioritizing simplicity of use.\n"
"Additionally, it's tailored to integrate with Quarkus' reactive architecture and networking layer seamlessly."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"The annotations utilized by the Quarkus WebSockets next extension differ from those in JSR 356 despite, sometimes, sharing the same name.\n"
"The JSR annotations carry a semantic that the Quarkus WebSockets Next extension does not follow."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Use the WebSockets Next extension"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"To use the `websockets-next` extension, you need to add the `io.quarkus.quarkus-websockets-next` extension to your project.\n"
"In your `pom.xml` file, add:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Configure the WebSocket server"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The WebSocket handling reuses the _main_ HTTP server."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Thus, the configuration of the WebSocket server is done in the `quarkus.http.` configuration section."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"WebSocket paths configured within the application are concatenated with the root path defined by `quarkus.http.root` (which defaults to /).\n"
"This concatenation ensures that WebSocket endpoints are appropriately positioned within the application's URL structure."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Refer to the xref:http-reference.adoc[HTTP guide] for more details."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Declare WebSocket endpoints"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "To declare web socket endpoints, you need to create a class annotated with `@io.quarkus.websockets.next.WebSocket` and define the path of the WebSocket endpoint:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Thus, client can connect to this web socket endpoint using `ws://localhost:8080/chat/your-name`.\n"
"If TLS is used, the URL is `wss://localhost:8443/chat/your-name`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Path parameters"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"The path of the WebSocket endpoint can contain path parameters.\n"
"The syntax is the same as for JAX-RS resources: `{parameterName}`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Access to the path parameter values is done through the `io.quarkus.websockets.next.WebSocketConnection` _session_ object:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Path parameter values are always strings.\n"
"If the path parameter is not present in the path, the `pathParam` method returns `null`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Query parameters are not supported. However, you can access the query using `session.handshakeRequest().query()`"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Sub-websockets endpoints"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"A class annotated with `@WebSocket` can encapsulate static nested classes, which are also annotated with `@WebSocket` and represent _sub-web_ sockets.\n"
"The resulting path of these sub-web sockets concatenates the path from the enclosing class and the nested class.\n"
"The resulting path is normalized, following the HTTP URL rules."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Sub-web sockets inherit access to the path parameters declared in the `@WebSocket` annotation of both the enclosing and nested classes.\n"
"The `consumePrimary` method within the enclosing class can access the `version` parameter in the following example.\n"
"Meanwhile, the `consumeNested` method within the nested class can access both `version` and `id` parameters:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "CDI Scopes for WebSocket Endpoints"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Classes annotated with `@WebSocket` are managed as CDI beans, allowing for flexible scope management within the application.\n"
"By default, WebSocket endpoints are considered in the singleton pseudo-scope.\n"
"However, developers can specify alternative scopes to suit their specific requirements:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Furthermore, each WebSocket connection is associated with its own _session_ scope.\n"
"When the `@OnOpen` method is invoked, a session scope corresponding to the WebSocket connection is established.\n"
"Subsequent calls to `@On[Text|Binary]Message` or `@OnClose` methods utilize this same session scope.\n"
"The session scope remains active until the `@OnClose` method completes execution, at which point it is terminated."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The `WebSocketConnection` object, which represents the connection itself, is also a session-scoped bean, allowing developers to access and manage WebSocket-specific data within the context of the session."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"In cases where a WebSocket endpoint does not declare an `@OnOpen` method, the session scope is still created.\n"
"It remains active until the connection terminates, regardless of the presence of an `@OnClose` method."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@OnTextMessage,` `@OnBinaryMessage,` `@OnOpen`, and `@OnClose` also have the request scoped activated for the duration of the method execution (until it produced its result)."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "WebSocket endpoint methods"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "A WebSocket endpoint comprises the following components:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Path: This is the URL path where the WebSocket connection is established (e.g., ws://localhost:8080/)."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "At most one `@OnTextMessage` method: Handles the connected client's text messages."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "At most one `@OnBinaryMessage` method: Handles the binary messages the connected client sends."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "At most one `@OnOpen` method: Invoked when a client connects to the WebSocket."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "At most one `@OnClose` method: Executed upon the client disconnecting from the WebSocket."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Only some endpoints need to include all methods.\n"
"However, it must contain at least `@On[Text|Binary]Message` or `@OnOpen`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"An error is thrown at build time if any endpoint violates these rules.\n"
"The static nested classes representing sub-websockets adhere to the same guidelines."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Any methods annotated with `@OnTextMessage`, `@OnBinaryMessage`, `@OnOpen`, and `@OnClose` outside a WebSocket endpoint are considered erroneous and will result in the build failing with an appropriate error message."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Processing messages"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Method receiving messages from the client are annotated with `@OnTextMessage` or `@OnBinaryMessage`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"`OnTextMessage` are invoked for every _text_ message received from the client.\n"
"`OnBinaryMessage` are invoked for every _binary_ message the client receives."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Invocation Rules"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"When invoking these annotated methods, the _session_ scope linked to the WebSocket connection remains active.\n"
"In addition, the request scope is active until the completion of the method (or until it produces its result for async and reactive methods)."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Quarkus WebSocket Next supports _blocking_ and _non-blocking_ logic, akin to Quarkus REST, determined by the method signature and additional annotations such as `@Blocking` and `@NonBlocking`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Here are the rules governing execution:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Non-blocking methods must execute on the connection's event loop."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@RunOnVirtualThread` are considered blocking and should execute on a virtual thread."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Blocking methods must execute on a worker thread if not annotated with `@RunOnVirtualThread`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "When `@RunOnVirtualThread` is employed, each invocation spawns a new virtual thread."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods returning `CompletionStage` and `Uni` are considered non-blocking"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods returning `Multi` are considered non-blocking and must be subscribed to, except if they return their own `Multi`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods returning `void` or plain objects are considered blocking."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Parameters"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "These methods can accept parameters in two formats:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The message object (of any type)."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "A `Multi<X>` with X as the message type."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Any other parameters should be flagged as errors."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The message object represents the data sent and can be accessed as either raw content (`String`, `JsonObject`, `JsonArray`, `Buffer` or `byte[]`) or deserialized high-level objects, which is the recommended approach."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"When receiving a `Multi`, the method is invoked once per connection, and the provided `Multi` receives the items transmitted by this connection.\n"
"The method must subscribe to the `Multi` to receive these items (or return a Multi).\n"
"Cancelling this subscription closes the associated connection."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Allowed Returned Types"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@OnTextMessage` or `@OnBinaryMessage` can return various types to handle WebSocket communication efficiently:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`void`: Indicates a blocking method where no explicit response is sent back to the client."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`Uni<Void>`: Denotes a non-blocking method where the completion of the returned Uni signifies the end of processing. No explicit response is sent back to the client."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "An object of type `X` represents a blocking method in which the returned object is serialized and sent back to the client as a response."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`Uni<X>`: Specifies a non-blocking method where the item emitted by the non-null `Uni` is sent to the client as a response."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`Multi<X>`: Indicates a non-blocking method where the items emitted by the non-null `Multi` are sequentially sent to the client until completion or cancellation."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Here are some examples of these methods:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "When returning a Multi, Quarkus subscribes to the returned Multi automatically and writes the emitted items until completion, failure, or cancellation. Failure or cancellation terminates the connection."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Streams"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"In addition to individual messages, WebSocket endpoints can handle streams of messages.\n"
"In this case, the method receives a `Multi<X>` as a parameter.\n"
"Each instance of `X` is deserialized using the same rules listed above."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"The method receiving the `Multi` can either return another `Multi` or `void`.\n"
"If the method returns a `Multi`, it does not have to subscribe to the incoming `multi`:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "This approach allows bi-directional streaming."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "When the method returns `void`, it must subscribe to the incoming `Multi`:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Skipping reply"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"When a method is intended to produce a message written to the client, it can emit `null`.\n"
"Emitting `null` signifies no response to be sent to the client, allowing for skipping a response when needed."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "JsonObject and JsonArray"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Vert.x `JSONObject` and `JSONArray` instances bypass the serialization and deserialization mechanisms.\n"
"Messages are sent as text messages."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Broadcasting"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"By default, responses produced by `@On[Text|Binary]Message` methods are sent back to the connected client.\n"
"However, using the `broadcast` parameter, responses can be broadcasted to all connected clients."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The same principle applies to methods returning instances of `Multi` or `Uni`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "OnOpen and OnClose methods"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The WebSocket endpoint can also be notified when a client connects or disconnects."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "This is done by annotating a method with `@OnOpen` or `@OnClose`:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`@OnOpen` is triggered upon client connection, while `@OnClose` is invoked upon disconnection."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "These methods have access to the _session-scoped_ `WebSocketConnection` bean."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Methods annotated with `@OnOpen` and `@OnClose` do not accept any parameters.\n"
"If such methods declare parameters, they will be flagged as errors and reported at build time."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`@OnOpen` and `@OnClose` methods support different returned types."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"For `@OnOpen` methods, the same rules as `@On[Text|Binary]Message` apply.\n"
"Thus, a method annotated with `@OnOpen` can send messages to the client immediately after connecting.\n"
"The supported return types for `@OnOpen` methods are:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`void`: Indicates a blocking method where no explicit message is sent back to the connected client."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`Uni<Void>`: Denotes a non-blocking method where the completion of the returned `Uni` signifies the end of processing. No message is sent back to the client."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "An object of type `X`: Represents a blocking method where the returned object is serialized and sent back to the client."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`Uni<X>`: Specifies a non-blocking method where the item emitted by the non-null `Uni` is sent to the client."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Items sent to the client are serialized except for the `String`, `JsonObject`, `JsonArray`, `Buffer`, and `byte[]` types.\n"
"In the case of `Multi`, Quarkus subscribes to the returned `Multi` and writes the items to the `WebSocket` as they are emitted.\n"
"`String`, `JsonObject` and `JsonArray` are sent as text messages.\n"
"`Buffers` and byte arrays are sent as binary messages."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "For `@OnClose` methods, the allowed return types are:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`void`: The method is considered blocking."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`Uni<Void>`: The method is considered non-blocking."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"`@OnClose` methods cannot send items to the connection client by returning objects.\n"
"They can only send messages to the other client by using the `WebSocketConnection` object."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Server-side Streaming"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@OnOpen` can utilize server-side streaming by returning a `Multi<X>`:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Broadcasting with @OnOpen"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Similar to `@On[Text|Binary]Message`, items sent to the client from a method annotated with `@OnOpen` can be broadcasted to all clients instead of just the connecting client:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Access to the WebSocketConnection"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"The `io.quarkus.websockets.next.WebSocketConnection` object represents the WebSocket connection.\n"
"It's _session-scoped_  and is valid for the whole duration of the connection."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, and `@OnClose` can access the `WebSocketConnection` object:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Note that outside of these methos, the `WebSocketConnection` object is not available."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The connection can be used to send messages to the client, access the path parameters, and broadcast messages to all connected clients."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The `WebSocketConnection` provides both a blocking and a non-blocking method to send messages:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`sendTextAndAwait(String message)`: Sends a text message to the client and waits for the message to be sent. It's blocking and should only be called from an executor thread."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`sendText(String message)`: Sends a text message to the client. It returns a `Uni`. It's non-blocking, but you must subscribe to it."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Serialization and Deserialization"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The WebSocket Next extension supports automatic serialization and deserialization of messages."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Objects of type `String`, `JsonObject`, `JsonArray`, `Buffer`, and `byte[]` are sent as-is and by-pass the serialization and deserialization.\n"
"When no codec is provided, the serialization and deserialization uses JSON (Jackson) automatically."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "When you need to customize the serialization and deserialization, you can provide a custom codec."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Custom codec"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "To implement a custom codec, you must provides a CDI bean implementing:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`io.quarkus.websockets.next.BinaryMessageCodec`  for binary messages"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`io.quarkus.websockets.next.TextMessageCodec`  for text messages"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The following example shows how to implement a custom codec for a `Item` class:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`OnTextMessage` and `OnBinaryMessage` methods can also specify which codec need to be used explicitly:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Specify the codec to use for both the deserialization and serialization of the message"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "When the serialization and deserialization must use a different codec, you can specify the codec to use for the serialization and deserialization separately:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Specify the codec to use for both the deserialization of the incoming message"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Specify the codec to use for the serialization of the outgoing message"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Handle Pong message"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"The `@OnPongMessage` annotation is used to consume pong messages.\n"
"A websocket endpoint must declare at most one method annotated with `@OnPongMessage`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The method must accept a single parameter of type `Buffer`:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Configuration reference"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""
